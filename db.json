{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/affix.js","path":"js/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/exturl.js","path":"js/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/js.cookie.js","path":"js/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scroll-cookie.js","path":"js/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scrollspy.js","path":"js/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/post-details.js","path":"js/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"source/uploads/avatar.png","path":"uploads/avatar.png","modified":0,"renderable":0}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1558505787309},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1558505787309},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1558505787309},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1558505787309},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1558505787309},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1558505787320},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1558505778496},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1558505787310},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1558505787310},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1558505787310},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1558505787310},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1558505787311},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1558505787311},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1558505787311},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1558505787311},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1558505787312},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1558505787312},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1558505787312},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1558505787318},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1558505787318},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1558505787319},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1558505787319},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1558505787319},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1558505787320},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1558505787319},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1558505787319},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1558505787311},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1558505787313},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1558505787313},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1558505787313},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1558505787313},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1558505787313},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1558505787314},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1558505787314},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1558505787314},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1558505787315},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1558505787315},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1558505787317},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1558505787317},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1558505787317},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1558505787318},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1558505787318},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1558505787321},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1558505787324},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1558505787332},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1558505787333},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1558505787333},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1558505787333},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1558505787334},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1558505787333},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1558505787334},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1558505787336},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1558505787337},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1558505787317},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1558505787336},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1558505787337},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1558505787315},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1558505787315},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1558505787316},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1558505787316},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1558505787316},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1558505787316},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1558505787321},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1558505787321},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1558505787322},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1558505787322},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1558505787322},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1558505787323},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1558505787323},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1558505787323},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1558505787323},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1558505787324},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1558505787324},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1558505787324},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1558505787326},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1558505787325},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1558505787334},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1558505787330},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1558505787335},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1558505787334},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1558505787335},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1558505787335},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1558505787335},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1558505787329},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1558505787332},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1558505787328},{"_id":"public/2019/05/22/hello-world/index.html","hash":"31b8663a3f8eea51b0b571d7eaaa1ec0e24ee191","modified":1558507392650},{"_id":"public/archives/index.html","hash":"172de9852f08eae1c370c025113fb5735b17e8a6","modified":1558510571549},{"_id":"public/archives/2019/index.html","hash":"70438eb04e095ea9c7ad7ffa8e6270fb9965e833","modified":1558510571549},{"_id":"public/archives/2019/05/index.html","hash":"e082094bb02282c530a7e950e3d812f5cd6441d1","modified":1558507392651},{"_id":"public/index.html","hash":"7f131920e838f95c4b98d0c5c4b23be828667935","modified":1558510571549},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1558506167864},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1558506167864},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1558506167864},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1558506167864},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1558506167864},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1558506167864},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1558506167864},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1558506167865},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1558506168394},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1558506168395},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1558506168395},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1558506168398},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1558506168398},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1558506168398},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1558506168398},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1558506168398},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1558506168398},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1558506168399},{"_id":"public/css/style.css","hash":"5f8dadd37d0052c557061018fe6f568f64fced9b","modified":1558506168399},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1558506168404},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1558506168404},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1558506168404},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1558506168410},{"_id":"themes/next/.all-contributorsrc","hash":"d139a3b623b2e40bbff5c96ad44adf7dbdbc5be1","modified":1558507350080},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1558507350080},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1558507350080},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1558507350080},{"_id":"themes/next/.gitignore","hash":"3558a8b174618c7a643aceb13233edd729813f9a","modified":1558507350086},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1558507350081},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1558507350086},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1558507350086},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1558507350087},{"_id":"themes/next/README.md","hash":"7958c3f70b2133b479ddaf525cc4b6d87a37e04a","modified":1558507350087},{"_id":"themes/next/_config.yml","hash":"0a379827531dba75b670febc586fa19bd754455e","modified":1558508685827},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1558507350089},{"_id":"themes/next/bower.json","hash":"9bc3900396a375f817db47d147bb6d207c661678","modified":1558507350089},{"_id":"themes/next/gulpfile.coffee","hash":"23bd9587807edc4dbecb5c5a29ab96ade24458b5","modified":1558507350097},{"_id":"themes/next/package.json","hash":"0284636ddd0e06ae593f4887819f3a35b08c1370","modified":1558507350131},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1558507350068},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1558507323087},{"_id":"themes/next/.git/config","hash":"e2ca9fa6f115d4406d24bf0df53fc26ce13e0c9b","modified":1558507350071},{"_id":"themes/next/.git/index","hash":"905fe7f609c1fb4f76cc69b554e5266b4fdce533","modified":1558507350258},{"_id":"themes/next/.git/packed-refs","hash":"c046975e7efa0795ca9cb1e574e08c9cd797da6e","modified":1558507350065},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"c149f003d03501565e7688915cd8f2e99fbf8f42","modified":1558507350081},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"285a95aca36e0ac770bcde2b35e3b572d45d1518","modified":1558507350081},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"3239625bb2573e61f7bcce27a74882a9ff7021e9","modified":1558507350083},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1558507350082},{"_id":"themes/next/.github/auto_assign.yml","hash":"cb68a1dca1c4623448c2ca899614a9f21df1b036","modified":1558507350083},{"_id":"themes/next/.github/config.yml","hash":"8a5cbf5aa9529390fe0a782758aca9c3a02f9dcf","modified":1558507350083},{"_id":"themes/next/.github/eslint-disable-bot.yml","hash":"16541fb7b80f5ab90135db96285badb63c4d7d3e","modified":1558507350084},{"_id":"themes/next/.github/release-drafter.yml","hash":"b4476ada5c62ee7d63ba2e59ead2ec4897086e3c","modified":1558507350085},{"_id":"themes/next/.github/stale.yml","hash":"41bf97ee86b8940a0b2e754499ec77fd2b44b717","modified":1558507350085},{"_id":"themes/next/.github/lock.yml","hash":"585d2c471047be320aa62f2b74dad797bf09c530","modified":1558507350084},{"_id":"themes/next/.github/mergeable.yml","hash":"8e3a6abc74b5cba57f9586fe6d98762fd4fc9b04","modified":1558507350084},{"_id":"themes/next/.github/topissuebot.yml","hash":"10665bf2b5aba351725715c71e94ad183a0e8f18","modified":1558507350085},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1558507350085},{"_id":"themes/next/.github/weekly-digest.yml","hash":"404e4ccb7fcd6587bc9b0247a7a7ff256d21f2cb","modified":1558507350085},{"_id":"themes/next/layout/archive.swig","hash":"7e8f3a41a68e912f2b2aaba905d314306ccaf794","modified":1558507350130},{"_id":"themes/next/layout/_layout.swig","hash":"74701fcf2303d59400587436ab4c244e04df7ad9","modified":1558507350103},{"_id":"themes/next/layout/category.swig","hash":"dda0e6b2139decaf5e865d22ec9d45fdb615a703","modified":1558507350130},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1558507350130},{"_id":"themes/next/layout/page.swig","hash":"d8a6cbf6f611c5d68d5da430cb6dc7010ff2c7e0","modified":1558507350130},{"_id":"themes/next/layout/tag.swig","hash":"a6be69a90924c9d2f4d90fb4867234859bd2c2e9","modified":1558507350131},{"_id":"themes/next/layout/post.swig","hash":"f74929fd792541916eb25c2addfb35431be071ba","modified":1558507350131},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1558507350098},{"_id":"themes/next/layout/schedule.swig","hash":"3268dd3d90d8b0e142cfa1a2ebb23355baeda148","modified":1558507350131},{"_id":"themes/next/languages/de.yml","hash":"9e524b2bdfb848504b93a51c5650e76bba5fa9e0","modified":1558507350097},{"_id":"themes/next/languages/fr.yml","hash":"7005c2b42c2c6e82bd7a1be5cc2f443b5fc79105","modified":1558507350098},{"_id":"themes/next/languages/id.yml","hash":"1c4868837f5109f1df863b04fe627352c31d404b","modified":1558507350099},{"_id":"themes/next/languages/it.yml","hash":"b30ff77ad8044e3b021a3b09187cd377dc789fd2","modified":1558507350099},{"_id":"themes/next/languages/ja.yml","hash":"1dc35e436da6214cdb3c2ff44bc4a06d0be5b9a0","modified":1558507350099},{"_id":"themes/next/languages/ko.yml","hash":"20bfaa7600d35235996c18e5c13dcef89c119626","modified":1558507350099},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1558507350098},{"_id":"themes/next/languages/pt-BR.yml","hash":"08b913a5cf4cc160083069cb4dfb2d66eecd1218","modified":1558507350100},{"_id":"themes/next/languages/es.yml","hash":"1752429687861b5cedd063c6ebe5dacefbe7e5a7","modified":1558507350098},{"_id":"themes/next/languages/fa.yml","hash":"cd41db832af5e399590b70a5227cfe0b0e98e101","modified":1558507350098},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1558507350100},{"_id":"themes/next/languages/nl.yml","hash":"1c44b3cb2f817808607f3bf6ef47f58ce7599995","modified":1558507350100},{"_id":"themes/next/languages/pt.yml","hash":"8ddac820e2c17b484b56c0da8881e142b10e221b","modified":1558507350100},{"_id":"themes/next/languages/vi.yml","hash":"ba7aff8f88e03f69a0acf7f1b90ee03e077ee88e","modified":1558507350101},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1558507350102},{"_id":"themes/next/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1558507350101},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1558507350102},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1558507350090},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"0d2f22ea09dd1ef63c66164e048d8239d2ccb2b8","modified":1558507350091},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1558507350091},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1558507350091},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"212a36d57495990b5f56e46ca8dce1d76c199660","modified":1558507350092},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1558507350091},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1558507350101},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1558507350092},{"_id":"themes/next/languages/uk.yml","hash":"1eb59e581568da9a81d6e20541b4ada5fc1c55c0","modified":1558507350101},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1558507350093},{"_id":"themes/next/docs/MATH.md","hash":"026d2cff73c22a30ea39c50783557ff4913aceac","modified":1558507350092},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1558507350132},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1558507350133},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1558507350256},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1558507350256},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1558507350257},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1558507350188},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1558507323089},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1558507323088},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1558507323090},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1558507323091},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1558507323089},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1558507323089},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1558507323091},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1558507323091},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1558507323092},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1558507323087},{"_id":"themes/next/.git/logs/HEAD","hash":"f86fc8b482c81c70edf39921abe95bb24a13020c","modified":1558507350069},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c37a60580c901c79ccb22564b228a46e06207445","modified":1558507350082},{"_id":"themes/next/.github/ISSUE_TEMPLATE/custom-issue-template.md","hash":"57e1e06e845193e80c7df4a4454af28352526f7a","modified":1558507350083},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"07c423cce4157b8e2dbf60907ccbf3f18c4cf98a","modified":1558507350083},{"_id":"themes/next/.github/ISSUE_TEMPLATE/non-english.md","hash":"0b0727ff4d5180ae67f930fb4f8e9488e33eda9f","modified":1558507350083},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1558507350102},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1558507350102},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1558507350103},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"89b0a0e64637bf5b0cfea0a23642df3d95eedfa4","modified":1558507350104},{"_id":"themes/next/layout/_macro/post.swig","hash":"8a8a2865b09e933c454d9a68e54dd9063dc8c559","modified":1558507350104},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"480d93619479dcfcbec6906803bb38b2dfbeae53","modified":1558507350105},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5352f96f4544c1520babf1cec7b44ddf2f8057b3","modified":1558507350106},{"_id":"themes/next/layout/_partials/footer.swig","hash":"589f545333e21a8c7823bce89ab45cf1eb7db6e2","modified":1558507350106},{"_id":"themes/next/layout/_partials/github-banner.swig","hash":"6357537ac0bb114aed4d61bafb39e6690a413697","modified":1558507350106},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1558507350110},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"06dac109504812b63766a80ede9ddacbd42d227d","modified":1558507350111},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"50be1762f60222379a8bef5e42ab1a0f3872b7ff","modified":1558507350114},{"_id":"themes/next/layout/_scripts/exturl.swig","hash":"61ae10d41f67ece004a025077fdb28724af05090","modified":1558507350114},{"_id":"themes/next/layout/_scripts/next-boot.swig","hash":"012e3ece672cc3b13d5e032139f328d3426d7d65","modified":1558507350114},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"edaff4766e0c05fd5c889d9dd32884d376bef9d9","modified":1558507350114},{"_id":"themes/next/layout/_scripts/scroll-cookie.swig","hash":"ccd13d73429ef91ef5e8b7d9fa43c8188facdf41","modified":1558507350116},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"83470eb401f78f4683907c48ad6760b90730daa3","modified":1558507350116},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1558507323092},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"4ccf2abbfd070874265b0436a3eff21f7c998dfb","modified":1558507350121},{"_id":"themes/next/layout/_third-party/chatra.swig","hash":"eefb68b69b4b0ed558ee0324ccd711990059b20d","modified":1558507350121},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"9be7c2c9cef63006866d1232c5289901e46be7ed","modified":1558507350125},{"_id":"themes/next/layout/_third-party/mermaid.swig","hash":"d6e6ddda836bd9e2e8d9767a910c7d3280080e81","modified":1558507350127},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"2c4a66be4677d3e4dec3f169ac8a769098dad1fe","modified":1558507350127},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"c28f9dc96ab735daeb7f599f86470aa5a83c03cf","modified":1558507350128},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"810a9b2a6059f46c4a2ddb178f1eaa4c5e23750b","modified":1558507350128},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"7757bd285732e857996b99af9d917953589fac5e","modified":1558507350128},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1558507323090},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"2398e5cd0cb466953b6e7a42c2b2caddebf3c348","modified":1558507350128},{"_id":"themes/next/layout/_third-party/tidio.swig","hash":"912368c41de675f458b267a49a99ae3e7e420ebb","modified":1558507350129},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"caa624092175d44e3d3a8c6ca23922718da2354c","modified":1558507350095},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"b218e30df4126b6adc87684775ac4c86ea7f7958","modified":1558507350095},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"bc43beb3af74d64fbd3920539d08861e4cadb9a0","modified":1558507350095},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1558507350096},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1558507350096},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"115ffbde2b3ce01ef1f8c2b3833e6f6794650132","modified":1558507350096},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"83feca62190abcca0332915ffe0eefe582573085","modified":1558507350096},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1558507350097},{"_id":"themes/next/docs/zh-CN/README.md","hash":"cdd7a8bdcf4a83ff4c74ee6c95c6bcc0b8c1831c","modified":1558507350097},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1558507350094},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1558507350094},{"_id":"themes/next/scripts/filters/exturl.js","hash":"79ad823ca803cb00e0bfc648aa6c9d59711e0519","modified":1558507350132},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1558507350095},{"_id":"themes/next/docs/ru/README.md","hash":"4d7ef717d0b57288e606996ee56c20ffd59d5a99","modified":1558507350094},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"10b61a8bac671e375916a4d234c120117098a78f","modified":1558507350121},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"cbe40cb67dad15ade967b0f396c1a95b6871f76a","modified":1558507350128},{"_id":"themes/next/scripts/helpers/engine.js","hash":"60eb1554456d9d0e5afc4a2d16f1580a0aa02da8","modified":1558507350132},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"799a042bbf497a4c7a2981aa2014ff28fa1bb382","modified":1558507350132},{"_id":"themes/next/scripts/tags/button.js","hash":"f3b4f7ae7e58072bbf410d950a99a0b53cbc866d","modified":1558507350134},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1558507350134},{"_id":"themes/next/scripts/tags/exturl.js","hash":"d605918cf819887e9555212dbe12da97fd887a0b","modified":1558507350134},{"_id":"themes/next/scripts/tags/full-image.js","hash":"fcb41c1c81560ed49dc4024654388a28ee7d32b0","modified":1558507350134},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"598220fa92ff3540dcab74f633ba41523daa8364","modified":1558507350135},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1558507350135},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1558507350135},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1558507350135},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1558507350135},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1558507350136},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1558507350140},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1558507350141},{"_id":"themes/next/source/css/main.styl","hash":"e010ec8ac73268a0f137204c89e0080ab8d59b3d","modified":1558507350188},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1558507350192},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1558507350192},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1558507350192},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1558507350193},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1558507350193},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1558507350193},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1558507350193},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1558507350194},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1558507350194},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1558507350195},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1558507350196},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1558507350188},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1558507350192},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1558507350196},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1558507350195},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1558507350197},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1558507350196},{"_id":"themes/next/source/images/searchicon.png","hash":"025d64ba0160a3a2257dd2b3032b5f7c9dd9b82b","modified":1558507350199},{"_id":"themes/next/source/js/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1558507350200},{"_id":"themes/next/source/js/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1558507350200},{"_id":"themes/next/source/js/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1558507350200},{"_id":"themes/next/source/js/js.cookie.js","hash":"e0afce539f1fb81d59e3c6f0a68d736e2fb45d93","modified":1558507350201},{"_id":"themes/next/source/js/next-boot.js","hash":"e0615efab5f81ba0fd39c0527eac31144deac7ce","modified":1558507350203},{"_id":"themes/next/source/js/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1558507350204},{"_id":"themes/next/source/js/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1558507350205},{"_id":"themes/next/source/js/utils.js","hash":"81913c5f75d0949443833cf4269ad63bd7f9be6f","modified":1558507350206},{"_id":"themes/next/source/js/motion.js","hash":"a16bc0b701646bf6653484675f4d5dc0f892d184","modified":1558507350201},{"_id":"themes/next/source/js/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1558507350203},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1558507350171},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1558507350171},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1558507350172},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1558507350187},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1558507350187},{"_id":"themes/next/.git/refs/heads/master","hash":"111ed22fc6f3b56b83735046a8b29724d046151c","modified":1558507350069},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1558507350103},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"fb33f499022cd02722f834fcef1a0e193362cfde","modified":1558507350104},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"fc6bafc8c633afadc538c5afa5620ea2a1cdcb84","modified":1558507350106},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"36eae78a4d7160a1c5e59ca3f7333f00b43d359b","modified":1558507350107},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"648bf7eda66629592cb915c4004534b3913cbc22","modified":1558507350108},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1558507350108},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"5adc60100e129c1d0307bdcaa0c7b8e8375a6ea4","modified":1558507350109},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"0fa4fadb39467b01cede49f21b22e86b1a2da805","modified":1558507350110},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"2940df694fff28e8bf71b6546b4162f1e38227db","modified":1558507350110},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"eea95b785c9c36d28e1839619793f66e89773bee","modified":1558507350111},{"_id":"themes/next/layout/_partials/post/reward.swig","hash":"d44f025eb93c99ddf90202d8293ccf80689a00c7","modified":1558507350111},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"ef11b5be5bfb2f0affe82cf521c002b37fef9819","modified":1558507350112},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"7d1693416a5dc098f4723a53da2e2d1fc2d6e075","modified":1558507350112},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1558507350112},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a5587bd1f60d35e58618576cec45e662aa44ea1f","modified":1558507350113},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"3615db591dd910fb9fa96542734c7ec0ef05019c","modified":1558507350111},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"15b542f5b06b7532234af367340b9ed9fcebb0ac","modified":1558507350113},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"6f181cc188ecbe5e607fd989756e470d4cb9765d","modified":1558507350113},{"_id":"themes/next/layout/_partials/share/likely.swig","hash":"b45e934d24d76ec6b6a790e92bdb3d56186b0e2a","modified":1558507350113},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1558507350112},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"5b05f165547391bf231e52f56f3d925efc09bc44","modified":1558507350115},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"71af31fea5913fd30c233e555ef13cf2c9768f72","modified":1558507350109},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1558507350115},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"e42604fbb17648484e5f12afe230d826de089388","modified":1558507350116},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"a5723950c343d220270bfd27bd30050eda6c3fb3","modified":1558507350117},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"798d67e4a736613ab899eabe6529091bbcda7850","modified":1558507350117},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"591b2ccd9713ccb922b9fcf5e278b6de9c5ec30b","modified":1558507350117},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"8eadb929c9e50e58502ccad2dc2657746f8c592a","modified":1558507350118},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"08cd47ef8572121b7811342d3c9a84a338a18191","modified":1558507350118},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"3d01fa6edc0ad73f81813613f2e8a610777f1852","modified":1558507350118},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1558507350119},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"9fa1ca7059243197d8fbbd35108c36629a254570","modified":1558507350119},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"4a966b7ffe2d80ff1b3dd0fd14b355766dc5c70f","modified":1558507350119},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"438c6f5e6665d72f4ea7ee206011d669246f6102","modified":1558507350119},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"c754f699c90f6278b9159eff1855c17bc713ee96","modified":1558507350120},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"f240a50cd9b627620d9a374a29cf95f0c5e99d7c","modified":1558507350120},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"92e04a2b9e0c3df594bc22235d1894e5ad458dfc","modified":1558507350121},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"0dd5b315d1da55dbfc10f51a1f8952f72eba2720","modified":1558507350121},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"3533167c4295637b91d90f3bae7c651cd128bb6e","modified":1558507350122},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"3cfeafefc672d9a7704650ebfb2f9d8668b38d9a","modified":1558507350123},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"c77a2e7ef5f449a445fb4d36b055721fba4a81af","modified":1558507350123},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"e8f91c571ceb4b80aafebc4d36b89fb41b1ae040","modified":1558507350124},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"388efc86af7f19c05ad0e26720cd24ee012d20b9","modified":1558507350124},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"2cbaae65a020bbb0e9265364488aff8bf84fa48d","modified":1558507350124},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"5856d5f701e51dfae1fd6fb486cefde67effd555","modified":1558507350124},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4a908b613518878b9b69576c5dba4a5185f552ab","modified":1558507350125},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a7e304b05a44279d3e4f611908d7faef9dc14d7c","modified":1558507350125},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"c2cb2f384bc30d31cdccf9794a729c03e687b45c","modified":1558507350127},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"601774d8672577aefbcefac82c94b01f0338da31","modified":1558507350127},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1558507350115},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"ea94aa85034c6d1b6bb865aecea55c73f8a14501","modified":1558507350129},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b3eaab6a269aa3fcbafe24fd06f0c9206dc12716","modified":1558507350129},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"02bb5748e8540b024e7f4008a9e640890b45280f","modified":1558507350107},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0097e45e7b671f8006b8b2d3c4f95cacc76a983c","modified":1558507350115},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"0a13dfd2de52a96901039098c6fc7b515edfc50b","modified":1558507350129},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1558507350171},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1558507350171},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"2036bbb73afd43251982ce824f06c6e88d35a2ef","modified":1558507350172},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2e8fb29aa92325df39054b5450757858c6cebc41","modified":1558507350172},{"_id":"themes/next/source/css/_variables/base.styl","hash":"640f25a63770af5566ccc9cec79c40a4f1c0b29e","modified":1558507350187},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"a8aa41625b94cf17a7f473ed10dcbe683b1db705","modified":1558507350187},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1558507350187},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"fc15e277d1504532a09b7b1bd31f900ad95ec4b8","modified":1558507350187},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1558507350209},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1558507350209},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1558507350210},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1558507350208},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1558507350245},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1558507350253},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1558507350256},{"_id":"themes/next/source/js/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1558507350204},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1558507350209},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1558507350204},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1558507350227},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"f86fc8b482c81c70edf39921abe95bb24a13020c","modified":1558507350070},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1558507350067},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"fe5ff961b86004a306778c7d33a85b32e5e00e48","modified":1558507350143},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"c8b3225396cb444d8baeb94bac78e5216b992a81","modified":1558507350143},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"b98c65006e2546fbf3870c16fbbcbc009dbaab15","modified":1558507350143},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1558507350144},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"9d71f34fa13a41b8c8cd2fbdf3fdea608385277c","modified":1558507350144},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"ce826aedf42b9eca424a044452f5d193866726a6","modified":1558507350153},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"ce2aae8f3ed8ceac3a2417e0481044cf69c788aa","modified":1558507350157},{"_id":"themes/next/source/css/_common/components/scrollbar.styl","hash":"d7b8bcf2a6031296c84bb4f4ecfb037af01d2d82","modified":1558507350158},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7e51ea64611ab5d678c112b4688d4db4fd2737e2","modified":1558507350169},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"6d900b4159eeb869196a619602578bf4d83a117b","modified":1558507350169},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"8e0740a9ad349ce5555122325da872923135a698","modified":1558507350170},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"9a190ef2f49bdbf69604b48ad1dc7197895ee9b6","modified":1558507350170},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"7ffde343bdf10add1f052f3c4308a15180eb4404","modified":1558507350170},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1558507350170},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"33456264a74d1bba38264d14713544d67d003733","modified":1558507350170},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"9a2d298dbdcbfd758518fd74b63897bc80ce15a5","modified":1558507350175},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1558507350175},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"24230e46fc9fb7b8551f97bb36e9bc1f7423098e","modified":1558507350176},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1558507350176},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"75d2d92af070eb10273558b2436972d3f12b361c","modified":1558507350176},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fa33213aceed7bf4bf25437ca9c1a00f7734ae65","modified":1558507350177},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"7359880e8d85312861fe0871f58b662e627dae0c","modified":1558507350177},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a96e46a6ae86c423f932bc2bc78b9f7453e4e4e5","modified":1558507350177},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6565b4a309325596768d0d32e022c80ef23066cb","modified":1558507350178},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"fc160583f742c94316a0fee05c18468033173534","modified":1558507350178},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"1edf4e69d0ec0dc9cefed6c35d3e803e0da4093d","modified":1558507350178},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"7359880e8d85312861fe0871f58b662e627dae0c","modified":1558507350179},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1558507350180},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"57044a6d19eb418c1c3d28787e82c69efa9e0ca6","modified":1558507350180},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"75737591682a2bafa71db4c03fb79e970ac0e7aa","modified":1558507350181},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"6400c98a9fd2b9a8502269f33355bd7ab3ff793b","modified":1558507350184},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"b6dac5bbf20f090cf4b67d156f030d7170dfb39c","modified":1558507350183},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"232aedbd44243b3b80c4503c947060d3269c1afc","modified":1558507350184},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5b936dddb7b4de4720cd1e8428b30a2f06d63fb","modified":1558507350184},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1558507350211},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1558507350212},{"_id":"themes/next/.git/objects/pack/pack-d5de0111c108d4560a50c9ec8a8efd9a6c19ca43.idx","hash":"c1a7d702fa746e5d841a3f27e6e4bd46179f2372","modified":1558507350048},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1558507350211},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1558507350226},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"f86fc8b482c81c70edf39921abe95bb24a13020c","modified":1558507350067},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4cfeec9434a72d5efc6ca225d3445d084d4590f7","modified":1558507350144},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ca97f0b6990eef947039faede80c56d9c4381ee1","modified":1558507350145},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"6c4990d375b640ee4551e62c48c1cbe4c3d62212","modified":1558507350146},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1558507350146},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"a410ed529afd46ddf4a96ecf0de6599488716887","modified":1558507350146},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"c0d9e18a9210fdcaf33e488518b3b288eb58c0a1","modified":1558507350147},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"cc6ee18f47f2e1e06df6fa0eadb37079e580fd11","modified":1558507350147},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"71d8d1cc22a2a7627a6db7240f0c4902a14f9bea","modified":1558507350147},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"e9dd8de7d98f1478ac7d351624fffd3d8738c905","modified":1558507350148},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1558507350148},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"6904fd7ea6455e008d9884558b68254608af9a3c","modified":1558507350148},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"2d142c6f39853916256ad8fc79eb6b85f4001ae8","modified":1558507350149},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1558507350150},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f1d52954b9a5d1ca8e224382349f525e598dd923","modified":1558507350150},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1558507350150},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"80addb9b725e329915c05c27b9fadaf56457a9b3","modified":1558507350151},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"61ca40856e5cacd48e0fa9728fde4605c7dd4c94","modified":1558507350152},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1558507350153},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"6a75bb1f2435f4e895cbbb5abbddf6e8f7257804","modified":1558507350153},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"2356226157e8068b0e9bbe2f7d0f74e1ab49199b","modified":1558507350153},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"c961d37190d9bec58a36306c7e716c4e72c4582f","modified":1558507350154},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"1385862a5c0bd845015d165aadbd1a6add7b72d7","modified":1558507350154},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0bf899fab331add63f0c8ead31ca3a3db2ad74d9","modified":1558507350154},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"b082d07b13a3d55b4c032fd351dfa9a4fd74edec","modified":1558507350154},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"496f931e3a7e313ba8088fb91bb20789cace72c9","modified":1558507350155},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"3f33bb862c2aa993f54987fbb345da067b79b112","modified":1558507350155},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"5440013a081201ca791582db98159dce93ea9e75","modified":1558507350155},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1558507350155},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1558507350156},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"8e058c99dd7d41f0bd34c7c28b6ac9fbb17dcb5e","modified":1558507350156},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"d5c8ffed7f2c701052b7a53abaf5ef437374ea72","modified":1558507350156},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"a6c24393dffbdd94dd5c01cdbec5e180b0bfbbbd","modified":1558507350156},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a3170630d8e085889a4bdc20eb7f09c5a0479c47","modified":1558507350157},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"9224b566cd2632f64c1a964e2c786cee93b93286","modified":1558507350158},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"707527c9950a7459355c8abcf4751c0964de0bc1","modified":1558507350158},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"cc83816614f21c7e1d8d3f867d547ff7c658cec4","modified":1558507350159},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-button.styl","hash":"517d541a80d59ad99a3f648be74891e0c7bc72a8","modified":1558507350159},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"c2d9c3b6fbfa65544e6b5a55d3cb2149df04a8a9","modified":1558507350159},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"9a3bfc878ca797946815bed23cd6f92b24a16358","modified":1558507350160},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"8a24b56524a388fbabd408ffc8ba9b56eb9e01ce","modified":1558507350160},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"c01609176929590f8f347075a9a12b661acd661e","modified":1558507350160},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"8e5c884fb950937afa350c608545455c87aa6129","modified":1558507350161},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"967fb3a3c6c851b34ec5df2d945dc266ed63d146","modified":1558507350161},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"58ec00eebe68d0eebd2eea435c710063877447df","modified":1558507350161},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1558507350162},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1558507350162},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"d7501ae01fc45fa15b00d1bc5233b9fffa20a3c9","modified":1558507350163},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"21b32840d8b3a14b10770153114778304ba6d1b0","modified":1558507350163},{"_id":"themes/next/source/css/_common/components/tags/pdf.styl","hash":"da8d34729fb6eb0fcb8ee81e67d2be3c02bc1bc4","modified":1558507350163},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"fcda60fecff1479adaf6521cf629cda2506337a8","modified":1558507350163},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"cbc0be5a3285b469858ec9ead48e2ea90bd47ae1","modified":1558507350164},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fc58498d4f5081fcf6218e9e18c5bf2328275bef","modified":1558507350164},{"_id":"themes/next/source/css/_common/components/third-party/copy-code.styl","hash":"688ca3eccc26727d050ad098b32b40934719588a","modified":1558507350165},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"ac7753d536341aa824d7bce0332735e838916995","modified":1558507350165},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"f1d9ee1f86a179741f2478f8c70ca11ab578810e","modified":1558507350166},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"7059e24235b7c57a07f3f8abaa06b0bd6a7eda2f","modified":1558507350166},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"9fac89c8146eb2675721a26f528d7d0f8be7debe","modified":1558507350167},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1558507350167},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"61466e3e5459960b5802a267751a0c8018918b0b","modified":1558507350168},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"3ae3f3c276d444862033fd3434c632ad0d2f84e6","modified":1558507350168},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"03c4fa9573fddd930552784cf484fd2ee7825323","modified":1558507350168},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1558507350177},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1558507350178},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1558507350180},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1558507350220},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1558507350233},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1558507350217},{"_id":"themes/next/.git/objects/pack/pack-d5de0111c108d4560a50c9ec8a8efd9a6c19ca43.pack","hash":"a9d6e52bbfabde65c88b02af66b69a7e95d3517a","modified":1558507350045},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1558507392655},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1558507392655},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1558507392656},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1558507392656},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1558507392656},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1558507392656},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1558507392656},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1558507392656},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1558507392656},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1558507392656},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1558507392656},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1558507392656},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1558507392656},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1558507392656},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1558507392656},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1558507392656},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1558507392656},{"_id":"public/images/searchicon.png","hash":"025d64ba0160a3a2257dd2b3032b5f7c9dd9b82b","modified":1558507392657},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1558507392657},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1558507392657},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1558507393232},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1558507393233},{"_id":"public/js/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1558507393237},{"_id":"public/js/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1558507393237},{"_id":"public/js/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1558507393237},{"_id":"public/js/js.cookie.js","hash":"e0afce539f1fb81d59e3c6f0a68d736e2fb45d93","modified":1558507393237},{"_id":"public/js/next-boot.js","hash":"e0615efab5f81ba0fd39c0527eac31144deac7ce","modified":1558507393237},{"_id":"public/js/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1558507393237},{"_id":"public/js/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1558507393237},{"_id":"public/js/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1558507393237},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1558507393237},{"_id":"public/js/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1558507393237},{"_id":"public/js/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1558507393237},{"_id":"public/css/main.css","hash":"7e1b0297a2ef0ea04fdc8c41989fb3fe1ad3e452","modified":1558507904271},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1558507393238},{"_id":"public/js/utils.js","hash":"81913c5f75d0949443833cf4269ad63bd7f9be6f","modified":1558507393241},{"_id":"public/js/motion.js","hash":"a16bc0b701646bf6653484675f4d5dc0f892d184","modified":1558507393241},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1558507393241},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1558507393243},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1558507393244},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1558507393245},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1558507393245},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1558507393265},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1558507393268},{"_id":"public/2019/01/31/博客技术迁移公告/index.html","hash":"b864d3544f5f8a42d41c0c39962561cb9d7021f8","modified":1558510571547},{"_id":"public/archives/2019/01/index.html","hash":"24d3fa88474105e3062880cd91e86fa3480b0447","modified":1558510571547},{"_id":"public/archives/2019/02/index.html","hash":"7dbfb73d4feac712894892bc9555d38ce7ee5254","modified":1558510571547},{"_id":"public/categories/文章教程/index.html","hash":"7b76864a74b6ddc5006eb58940011afb73f29300","modified":1558510571547},{"_id":"public/categories/技术文档/index.html","hash":"4a6ab7bdfce68a4ded6e7cf91311c8122a8289f6","modified":1558510571547},{"_id":"public/tags/博客/index.html","hash":"9198e816f53b0d4ae77b00ad8df21a014e72ff61","modified":1558510571547},{"_id":"public/tags/Jekyll/index.html","hash":"81052037d05b305b444d4049200e8cef2c730ec7","modified":1558510571547},{"_id":"public/tags/GitHub-Pages/index.html","hash":"b3a5cb6c9bd3faf79d064a06244241c32f4e1078","modified":1558510571547},{"_id":"public/tags/markdown/index.html","hash":"0ea973604580c99c9692956fd9fc32dc9dd0ad70","modified":1558510571547},{"_id":"public/tags/node/index.html","hash":"70597afb00a5007d2dae25c5522dbfee9ec9a654","modified":1558510571548},{"_id":"public/tags/linux/index.html","hash":"88d5c3a9470560ec14ea3e74a42ac27102520bbf","modified":1558510571548},{"_id":"public/tags/yarn/index.html","hash":"6d32090fd9c07cdb52c216b903c195ecd88fad0d","modified":1558510571548},{"_id":"public/tags/jenkins/index.html","hash":"dacc4c236e2338a639f5ddb09c1ad1bb975164b1","modified":1558510571548},{"_id":"public/tags/yum/index.html","hash":"8db474058a49a9546271d5591f89a0106d8d0f24","modified":1558510571548},{"_id":"public/tags/CAS/index.html","hash":"2fd2dafad1c0f748c5303adafefc7bc4735e453b","modified":1558510571548},{"_id":"public/tags/单点登录/index.html","hash":"c166097138f9fe78e7eb7117df2b0e6c9c7e9cc3","modified":1558510571548},{"_id":"public/tags/入门/index.html","hash":"595e5cafef27924972b931346627001748e0bc48","modified":1558510571548},{"_id":"public/tags/MongoDB/index.html","hash":"f91e37fdadd01b4ef41bb9c1333da49387500c41","modified":1558510571548},{"_id":"public/2019/02/15/在Linux上安装MongoDB社区版/index.html","hash":"40960ad520aa184d38ad5f87f5fcb4f0a29957e1","modified":1558510571549},{"_id":"public/2019/01/30/2019-01-08-linux-jenkins-install-yum/index.html","hash":"266aebe69185c80af3e4198636834dc3fd8ae417","modified":1558510571549},{"_id":"public/2019/01/30/2019-01-03-linux-yarn-install-offline/index.html","hash":"3449781b24b1b769f7931c2bebd8ee8e61cc5fc3","modified":1558510571549},{"_id":"public/2019/01/30/2019-01-03-linux-node-install/index.html","hash":"f0d1340cb41190ec2971fb2e2b8e4f17b5b0ef0f","modified":1558510571549},{"_id":"public/2019/01/30/2018-12-29-learn-about-cas/index.html","hash":"c99110c2cbebedc7983dc857a8dd0f305e253ed6","modified":1558510571549},{"_id":"public/2019/01/30/2018-12-29-build-blog-with-jekyll-and-github-pages/index.html","hash":"9894a0e7e47724132e473d86b909ccb3d28fc8a9","modified":1558510571549},{"_id":"source/_posts/2018-12-29-build-blog-with-jekyll-and-github-pages.md","hash":"fb09a537312c9da9078ad6a808458b44133581ef","modified":1548844047757},{"_id":"source/_posts/2018-12-29-learn-about-cas.md","hash":"a21d80e28504723ba9420342bea5e0d07d5608a8","modified":1548844047759},{"_id":"source/_posts/2019-01-03-linux-node-install.md","hash":"396b393e54d2fe27942adda891efa442e500bbec","modified":1548844047760},{"_id":"source/_posts/2019-01-03-linux-yarn-install-offline.md","hash":"49542207e98bb17fe67a3b0a290a964a29ccbdce","modified":1548844047761},{"_id":"source/_posts/2019-01-08-linux-jenkins-install-yum.md","hash":"06722610f015b6034452f19d953251cf20b9b015","modified":1550210728965},{"_id":"source/_posts/博客技术迁移公告.md","hash":"0c08dc6161f8bfaa31f784b5af0e99bc457376b0","modified":1548864984726},{"_id":"source/_posts/在Linux上安装MongoDB社区版.md","hash":"6c1a55a4e51440269099cbce4d04d2d9de83e65c","modified":1558504741590},{"_id":"public/uploads/avatar.png","hash":"f47c5c8514c35cc5babdf3d67f10d398ffb95b3d","modified":1558508670443},{"_id":"source/uploads/avatar.png","hash":"f47c5c8514c35cc5babdf3d67f10d398ffb95b3d","modified":1558508667419},{"_id":"source/categories/index.md","hash":"a0d70e94dae6b2a9118c4129e96275d99748ed59","modified":1558510551898},{"_id":"source/_posts/2018-12-30-cas-install.md","hash":"898d4690db7bbaccdfa7e3d12f0d4965f044ce96","modified":1558509314046},{"_id":"source/tags/index.md","hash":"7104e336728ed274718823251d154b735460772c","modified":1558510546588},{"_id":"public/categories/index.html","hash":"3541ce0b07d73731e6957f5614d4bae480f029c1","modified":1558510571546},{"_id":"public/tags/index.html","hash":"4a7cd40e25d44e37594263dd10764e2924c78b12","modified":1558510571546},{"_id":"public/tags/安装/index.html","hash":"48e1e83e6f2becbc98d2621c790fd9070fff5b0d","modified":1558510571549},{"_id":"public/2019/01/31/2018-12-30-cas-install/index.html","hash":"382215b7255afd0302d77418a262ed30adf73577","modified":1558510571549}],"Category":[{"name":"文章教程","_id":"cjvyv444v0002hwazy3daf5e0"},{"name":"技术文档","_id":"cjvyv444y0006hwazoy4on02q"}],"Data":[],"Page":[{"title":"目录","date":"2019-05-22T07:27:25.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 目录\ndate: 2019-05-22 15:27:25\ntype: \"categories\"\n---\n","updated":"2019-05-22T07:35:51.898Z","path":"categories/index.html","_id":"cjvywoj640000a2aznwrwxwvq","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2019-05-22T07:25:38.000Z","ype":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 分类\ndate: 2019-05-22 15:25:38\nype: \"tags\"\n---\n","updated":"2019-05-22T07:35:46.588Z","path":"tags/index.html","_id":"cjvywoj6q0002a2azq9nvjwzu","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"基于Jekyll和GitHub Pages搭建个人博客","layout":"single","classes":"wide","author_profile":true,"read_time":false,"comments":1,"related":true,"_content":"\n## 本文介绍如何利用Jekyll创建一个静态站点，并托管到GitHub Pages上。\n\n## JeKyll\n\n[JeKyll](https://jekyllrb.com)是一个基于Ruby的博客类静态网站生成器。\n\n> Jekyll是一个简单，可扩展的静态站点生成器。您可以使用自己喜欢的标记语言编写文本，然后通过布局来创建静态网站。在整个过程中，您可以调整网站URL的显示方式，布局中显示的数据等\n\n### 基于JeKyll创建静态网站\n\n1. [安装Ruby开发环境](https://jekyllrb.com/docs/installation/) ([以macOS 为例](https://jekyllrb.com/docs/installation/macos/)) ***macOS Mojave 10.14 可省略以下安装步骤***\n\n   1.1 安装Homebrew和Ruby\n\n    ``` bash\n    # Install Homebrew\n    /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n    brew install ruby\n    ```\n   1.2 导出Ruby环境变量\n\n    ``` bash\n    echo 'export PATH=/usr/local/opt/ruby/bin:$PATH' >> ~/.zshrc\n    ```\n\n   1.3 检查Ruby是否安装成功\n\n    ``` bash\n    which ruby\n    /usr/local/opt/ruby/bin/ruby\n    ruby -v\n    ruby 2.6.0p0 (2018-12-25 revision 66547) [x86_64-darwin18]\n    ```\n2. 安装打包器和jekyll\n\n    ``` bash\n    gem install --user-install bundler jekyll\n    ```\n3. \b创建一个新的Jekyll网站\n\n    ``` bash\n    jekyll new myblog\n    ```\n    若提示 *command not found: jekyll* ，需要把gem路径配置到PATH里面\n\n4. 编译网站并启动本地服务\n\n   ``` bash\n   cd myblog\n   bundle exec jekyll serve\n   ```\n\n   访问[http://localhost:4000/](http://localhost:4000/)查看效果\n\n## GitHub Pages\n\n[GitHub Pages](https://pages.github.com/)是直接从GitHub仓库托管的个人网站和项目网站。\n\n### 基于GitHub Pages托管网站\n\n1. \b创建一个仓库  \n  前往[GitHUb](https://github.com/)创建一个新的仓库，\b\b仓库名称为\b*username.github.io*，其中\b*username*是你的GitHub用户名或者组织名称。\n\n2. 克隆仓库  \n   把步骤一创建的仓库克隆到本地。\n\n   ``` bash\n\n   git clone https://github.com/username/username.github.io\n   ```\n\n3. 创建第一个页面  \n   进入项目目录，新建一个index.html的文件。\n\n   ``` bash\n\n   cd username.github.io\n   echo \"Hello World\" > index.html\n   ```\n\n4. 推送到远程仓库  \n   增加、提交和推送你的更改\n\n   ``` bash\n\n   git add --all\n   git commit -m \"初始提交\"\n   git push -u origin master\n   ```\n\n5. 你已经成功完成  \n   访问[*https://username.github.io*](https://username.github.io)查看效果\n\n## 整合部署\n\n将\bJekyll生成的静态网站复制到username.github.io仓库并\b提交推送到GitHub\n\n``` bash\n\bcp -r myblog/** username.github.io\n```\n\n后面直接修改仓库文件，用Jekyll编译提交即可。","source":"_posts/2018-12-29-build-blog-with-jekyll-and-github-pages.md","raw":"---\ntitle: \"基于Jekyll和GitHub Pages搭建个人博客\"\nlayout: single\nclasses: wide\nauthor_profile: true\nread_time: false\ncomments: null\nrelated: true\ncategories:\n  - 文章教程\ntags:\n  - 博客\n  - Jekyll\n  - GitHub Pages\n  - markdown\n---\n\n## 本文介绍如何利用Jekyll创建一个静态站点，并托管到GitHub Pages上。\n\n## JeKyll\n\n[JeKyll](https://jekyllrb.com)是一个基于Ruby的博客类静态网站生成器。\n\n> Jekyll是一个简单，可扩展的静态站点生成器。您可以使用自己喜欢的标记语言编写文本，然后通过布局来创建静态网站。在整个过程中，您可以调整网站URL的显示方式，布局中显示的数据等\n\n### 基于JeKyll创建静态网站\n\n1. [安装Ruby开发环境](https://jekyllrb.com/docs/installation/) ([以macOS 为例](https://jekyllrb.com/docs/installation/macos/)) ***macOS Mojave 10.14 可省略以下安装步骤***\n\n   1.1 安装Homebrew和Ruby\n\n    ``` bash\n    # Install Homebrew\n    /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n    brew install ruby\n    ```\n   1.2 导出Ruby环境变量\n\n    ``` bash\n    echo 'export PATH=/usr/local/opt/ruby/bin:$PATH' >> ~/.zshrc\n    ```\n\n   1.3 检查Ruby是否安装成功\n\n    ``` bash\n    which ruby\n    /usr/local/opt/ruby/bin/ruby\n    ruby -v\n    ruby 2.6.0p0 (2018-12-25 revision 66547) [x86_64-darwin18]\n    ```\n2. 安装打包器和jekyll\n\n    ``` bash\n    gem install --user-install bundler jekyll\n    ```\n3. \b创建一个新的Jekyll网站\n\n    ``` bash\n    jekyll new myblog\n    ```\n    若提示 *command not found: jekyll* ，需要把gem路径配置到PATH里面\n\n4. 编译网站并启动本地服务\n\n   ``` bash\n   cd myblog\n   bundle exec jekyll serve\n   ```\n\n   访问[http://localhost:4000/](http://localhost:4000/)查看效果\n\n## GitHub Pages\n\n[GitHub Pages](https://pages.github.com/)是直接从GitHub仓库托管的个人网站和项目网站。\n\n### 基于GitHub Pages托管网站\n\n1. \b创建一个仓库  \n  前往[GitHUb](https://github.com/)创建一个新的仓库，\b\b仓库名称为\b*username.github.io*，其中\b*username*是你的GitHub用户名或者组织名称。\n\n2. 克隆仓库  \n   把步骤一创建的仓库克隆到本地。\n\n   ``` bash\n\n   git clone https://github.com/username/username.github.io\n   ```\n\n3. 创建第一个页面  \n   进入项目目录，新建一个index.html的文件。\n\n   ``` bash\n\n   cd username.github.io\n   echo \"Hello World\" > index.html\n   ```\n\n4. 推送到远程仓库  \n   增加、提交和推送你的更改\n\n   ``` bash\n\n   git add --all\n   git commit -m \"初始提交\"\n   git push -u origin master\n   ```\n\n5. 你已经成功完成  \n   访问[*https://username.github.io*](https://username.github.io)查看效果\n\n## 整合部署\n\n将\bJekyll生成的静态网站复制到username.github.io仓库并\b提交推送到GitHub\n\n``` bash\n\bcp -r myblog/** username.github.io\n```\n\n后面直接修改仓库文件，用Jekyll编译提交即可。","slug":"2018-12-29-build-blog-with-jekyll-and-github-pages","published":1,"date":"2019-01-30T10:27:27.757Z","updated":"2019-01-30T10:27:27.757Z","_id":"cjvyv444q0000hwazrq8inwjd","photos":[],"link":"","content":"<h2 id=\"本文介绍如何利用Jekyll创建一个静态站点，并托管到GitHub-Pages上。\"><a href=\"#本文介绍如何利用Jekyll创建一个静态站点，并托管到GitHub-Pages上。\" class=\"headerlink\" title=\"本文介绍如何利用Jekyll创建一个静态站点，并托管到GitHub Pages上。\"></a>本文介绍如何利用Jekyll创建一个静态站点，并托管到GitHub Pages上。</h2><h2 id=\"JeKyll\"><a href=\"#JeKyll\" class=\"headerlink\" title=\"JeKyll\"></a>JeKyll</h2><p><a href=\"https://jekyllrb.com\" target=\"_blank\" rel=\"noopener\">JeKyll</a>是一个基于Ruby的博客类静态网站生成器。</p>\n<blockquote>\n<p>Jekyll是一个简单，可扩展的静态站点生成器。您可以使用自己喜欢的标记语言编写文本，然后通过布局来创建静态网站。在整个过程中，您可以调整网站URL的显示方式，布局中显示的数据等</p>\n</blockquote>\n<h3 id=\"基于JeKyll创建静态网站\"><a href=\"#基于JeKyll创建静态网站\" class=\"headerlink\" title=\"基于JeKyll创建静态网站\"></a>基于JeKyll创建静态网站</h3><ol>\n<li><p><a href=\"https://jekyllrb.com/docs/installation/\" target=\"_blank\" rel=\"noopener\">安装Ruby开发环境</a> (<a href=\"https://jekyllrb.com/docs/installation/macos/\" target=\"_blank\" rel=\"noopener\">以macOS 为例</a>) <strong><em>macOS Mojave 10.14 可省略以下安装步骤</em></strong></p>\n<p>1.1 安装Homebrew和Ruby</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Install Homebrew</span></span><br><span class=\"line\">/usr/bin/ruby -e <span class=\"string\">\"<span class=\"variable\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">brew install ruby</span><br></pre></td></tr></table></figure>\n<p>1.2 导出Ruby环境变量</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'export PATH=/usr/local/opt/ruby/bin:$PATH'</span> &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure>\n<p>1.3 检查Ruby是否安装成功</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">which</span> ruby</span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/opt/ruby/bin/ruby</span><br><span class=\"line\">ruby -v</span><br><span class=\"line\">ruby 2.6.0p0 (2018-12-25 revision 66547) [x86_64-darwin18]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装打包器和jekyll</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install --user-install bundler jekyll</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>\b创建一个新的Jekyll网站</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jekyll new myblog</span><br></pre></td></tr></table></figure>\n<p> 若提示 <em>command not found: jekyll</em> ，需要把gem路径配置到PATH里面</p>\n</li>\n<li><p>编译网站并启动本地服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> myblog</span><br><span class=\"line\">bundle <span class=\"built_in\">exec</span> jekyll serve</span><br></pre></td></tr></table></figure>\n<p>访问<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a>查看效果</p>\n</li>\n</ol>\n<h2 id=\"GitHub-Pages\"><a href=\"#GitHub-Pages\" class=\"headerlink\" title=\"GitHub Pages\"></a>GitHub Pages</h2><p><a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\">GitHub Pages</a>是直接从GitHub仓库托管的个人网站和项目网站。</p>\n<h3 id=\"基于GitHub-Pages托管网站\"><a href=\"#基于GitHub-Pages托管网站\" class=\"headerlink\" title=\"基于GitHub Pages托管网站\"></a>基于GitHub Pages托管网站</h3><ol>\n<li><p>\b创建一个仓库<br>前往<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHUb</a>创建一个新的仓库，\b\b仓库名称为\b<em>username.github.io</em>，其中\b<em>username</em>是你的GitHub用户名或者组织名称。</p>\n</li>\n<li><p>克隆仓库<br>把步骤一创建的仓库克隆到本地。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/username/username.github.io</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建第一个页面<br>进入项目目录，新建一个index.html的文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> username.github.io</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Hello World\"</span> &gt; index.html</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>推送到远程仓库<br>增加、提交和推送你的更改</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">git add --all</span><br><span class=\"line\">git commit -m <span class=\"string\">\"初始提交\"</span></span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>你已经成功完成<br>访问<a href=\"https://username.github.io\" target=\"_blank\" rel=\"noopener\"><em>https://username.github.io</em></a>查看效果</p>\n</li>\n</ol>\n<h2 id=\"整合部署\"><a href=\"#整合部署\" class=\"headerlink\" title=\"整合部署\"></a>整合部署</h2><p>将\bJekyll生成的静态网站复制到username.github.io仓库并\b提交推送到GitHub</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\bcp -r myblog/** username.github.io</span><br></pre></td></tr></table></figure>\n<p>后面直接修改仓库文件，用Jekyll编译提交即可。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"本文介绍如何利用Jekyll创建一个静态站点，并托管到GitHub-Pages上。\"><a href=\"#本文介绍如何利用Jekyll创建一个静态站点，并托管到GitHub-Pages上。\" class=\"headerlink\" title=\"本文介绍如何利用Jekyll创建一个静态站点，并托管到GitHub Pages上。\"></a>本文介绍如何利用Jekyll创建一个静态站点，并托管到GitHub Pages上。</h2><h2 id=\"JeKyll\"><a href=\"#JeKyll\" class=\"headerlink\" title=\"JeKyll\"></a>JeKyll</h2><p><a href=\"https://jekyllrb.com\" target=\"_blank\" rel=\"noopener\">JeKyll</a>是一个基于Ruby的博客类静态网站生成器。</p>\n<blockquote>\n<p>Jekyll是一个简单，可扩展的静态站点生成器。您可以使用自己喜欢的标记语言编写文本，然后通过布局来创建静态网站。在整个过程中，您可以调整网站URL的显示方式，布局中显示的数据等</p>\n</blockquote>\n<h3 id=\"基于JeKyll创建静态网站\"><a href=\"#基于JeKyll创建静态网站\" class=\"headerlink\" title=\"基于JeKyll创建静态网站\"></a>基于JeKyll创建静态网站</h3><ol>\n<li><p><a href=\"https://jekyllrb.com/docs/installation/\" target=\"_blank\" rel=\"noopener\">安装Ruby开发环境</a> (<a href=\"https://jekyllrb.com/docs/installation/macos/\" target=\"_blank\" rel=\"noopener\">以macOS 为例</a>) <strong><em>macOS Mojave 10.14 可省略以下安装步骤</em></strong></p>\n<p>1.1 安装Homebrew和Ruby</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Install Homebrew</span></span><br><span class=\"line\">/usr/bin/ruby -e <span class=\"string\">\"<span class=\"variable\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">brew install ruby</span><br></pre></td></tr></table></figure>\n<p>1.2 导出Ruby环境变量</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'export PATH=/usr/local/opt/ruby/bin:$PATH'</span> &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure>\n<p>1.3 检查Ruby是否安装成功</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">which</span> ruby</span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/opt/ruby/bin/ruby</span><br><span class=\"line\">ruby -v</span><br><span class=\"line\">ruby 2.6.0p0 (2018-12-25 revision 66547) [x86_64-darwin18]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装打包器和jekyll</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install --user-install bundler jekyll</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>\b创建一个新的Jekyll网站</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jekyll new myblog</span><br></pre></td></tr></table></figure>\n<p> 若提示 <em>command not found: jekyll</em> ，需要把gem路径配置到PATH里面</p>\n</li>\n<li><p>编译网站并启动本地服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> myblog</span><br><span class=\"line\">bundle <span class=\"built_in\">exec</span> jekyll serve</span><br></pre></td></tr></table></figure>\n<p>访问<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a>查看效果</p>\n</li>\n</ol>\n<h2 id=\"GitHub-Pages\"><a href=\"#GitHub-Pages\" class=\"headerlink\" title=\"GitHub Pages\"></a>GitHub Pages</h2><p><a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\">GitHub Pages</a>是直接从GitHub仓库托管的个人网站和项目网站。</p>\n<h3 id=\"基于GitHub-Pages托管网站\"><a href=\"#基于GitHub-Pages托管网站\" class=\"headerlink\" title=\"基于GitHub Pages托管网站\"></a>基于GitHub Pages托管网站</h3><ol>\n<li><p>\b创建一个仓库<br>前往<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHUb</a>创建一个新的仓库，\b\b仓库名称为\b<em>username.github.io</em>，其中\b<em>username</em>是你的GitHub用户名或者组织名称。</p>\n</li>\n<li><p>克隆仓库<br>把步骤一创建的仓库克隆到本地。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/username/username.github.io</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建第一个页面<br>进入项目目录，新建一个index.html的文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> username.github.io</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Hello World\"</span> &gt; index.html</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>推送到远程仓库<br>增加、提交和推送你的更改</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">git add --all</span><br><span class=\"line\">git commit -m <span class=\"string\">\"初始提交\"</span></span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>你已经成功完成<br>访问<a href=\"https://username.github.io\" target=\"_blank\" rel=\"noopener\"><em>https://username.github.io</em></a>查看效果</p>\n</li>\n</ol>\n<h2 id=\"整合部署\"><a href=\"#整合部署\" class=\"headerlink\" title=\"整合部署\"></a>整合部署</h2><p>将\bJekyll生成的静态网站复制到username.github.io仓库并\b提交推送到GitHub</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\bcp -r myblog/** username.github.io</span><br></pre></td></tr></table></figure>\n<p>后面直接修改仓库文件，用Jekyll编译提交即可。</p>\n"},{"title":"Linux离线安装node","layout":"single","author_profile":true,"read_time":false,"comments":1,"related":true,"classes":"wide","_content":"\n本文介绍如何在Linux 64位系统上通过二进制压缩文件离线安装安装node。  \n\n1、 到[官网](https://nodejs.org/dist/v10.15.0/node-v10.15.0-linux-x64.tar.xz)下载安装包，并scp上传到目标服务器。\n\n``` bash\nscp -r ~/Downloads/node-v10.15.0-linux-x64.tar.xz user@host:path\n```\n\n2、将二进制存档解压缩到您要安装Node的任何目录，我使用/usr/ local/lib/nodejs\n\n``` bash\nVERSION=v10.15.0\nDISTRO=linux-x64\nsudo mkdir /usr/local/lib/nodejs\nsudo tar -xJvf node-$VERSION-$DISTRO.tar.xz -C /usr/local/lib/nodejs\nsudo mv /usr/local/lib/nodejs/node-$VERSION-$DISTRO /usr/local/lib/nodejs/node-$VERSION\n```\n\n3、设置环境变量vim /etc/profile，将下面\b代码添加到文件最后\n\n``` bash\n# Nodejs\nexport NODEJS_HOME=/usr/local/lib/nodejs/node-$VERSION/bin\nexport PATH=$NODEJS_HOME:$PATH\n```\n\n4、刷新文件配置\n\n``` bash\n. /etc/profile\n```\n\n5、测试安装\n\n``` bash\nnode -v\nnpm version\nnpx -v\n```\n\n正常输出是：\n\n``` bash\nnode -v\nv10.15.0\nnpm version\n{ npm: '6.4.1',\n  ares: '1.15.0',\n  cldr: '33.1',\n  http_parser: '2.8.0',\n  icu: '62.1',\n  modules: '64',\n  napi: '3',\n  nghttp2: '1.34.0',\n  node: '10.15.0',\n  openssl: '1.1.0j',\n  tz: '2018e',\n  unicode: '11.0',\n  uv: '1.23.2',\n  v8: '6.8.275.32-node.45',\n  zlib: '1.2.11' }\n```\n\n创建sudo链接：\n\n``` bash\nsudo ln -s /usr/local/lib/nodejs/node-$VERSION/bin/node /usr/bin/node\n\nsudo ln -s /usr/local/lib/nodejs/node-$VERSION/bin/npm /usr/bin/npm\n\nsudo ln -s /usr/local/lib/nodejs/node-$VERSION/bin/npx /usr/bin/npx\n```","source":"_posts/2019-01-03-linux-node-install.md","raw":"---\ntitle: Linux离线安装node\nlayout: single\nauthor_profile: true\nread_time: false\ncomments: null\nrelated: true\nclasses: wide\ncategories:\n- 技术文档\ntags:\n- node\n- linux\n---\n\n本文介绍如何在Linux 64位系统上通过二进制压缩文件离线安装安装node。  \n\n1、 到[官网](https://nodejs.org/dist/v10.15.0/node-v10.15.0-linux-x64.tar.xz)下载安装包，并scp上传到目标服务器。\n\n``` bash\nscp -r ~/Downloads/node-v10.15.0-linux-x64.tar.xz user@host:path\n```\n\n2、将二进制存档解压缩到您要安装Node的任何目录，我使用/usr/ local/lib/nodejs\n\n``` bash\nVERSION=v10.15.0\nDISTRO=linux-x64\nsudo mkdir /usr/local/lib/nodejs\nsudo tar -xJvf node-$VERSION-$DISTRO.tar.xz -C /usr/local/lib/nodejs\nsudo mv /usr/local/lib/nodejs/node-$VERSION-$DISTRO /usr/local/lib/nodejs/node-$VERSION\n```\n\n3、设置环境变量vim /etc/profile，将下面\b代码添加到文件最后\n\n``` bash\n# Nodejs\nexport NODEJS_HOME=/usr/local/lib/nodejs/node-$VERSION/bin\nexport PATH=$NODEJS_HOME:$PATH\n```\n\n4、刷新文件配置\n\n``` bash\n. /etc/profile\n```\n\n5、测试安装\n\n``` bash\nnode -v\nnpm version\nnpx -v\n```\n\n正常输出是：\n\n``` bash\nnode -v\nv10.15.0\nnpm version\n{ npm: '6.4.1',\n  ares: '1.15.0',\n  cldr: '33.1',\n  http_parser: '2.8.0',\n  icu: '62.1',\n  modules: '64',\n  napi: '3',\n  nghttp2: '1.34.0',\n  node: '10.15.0',\n  openssl: '1.1.0j',\n  tz: '2018e',\n  unicode: '11.0',\n  uv: '1.23.2',\n  v8: '6.8.275.32-node.45',\n  zlib: '1.2.11' }\n```\n\n创建sudo链接：\n\n``` bash\nsudo ln -s /usr/local/lib/nodejs/node-$VERSION/bin/node /usr/bin/node\n\nsudo ln -s /usr/local/lib/nodejs/node-$VERSION/bin/npm /usr/bin/npm\n\nsudo ln -s /usr/local/lib/nodejs/node-$VERSION/bin/npx /usr/bin/npx\n```","slug":"2019-01-03-linux-node-install","published":1,"date":"2019-01-30T10:27:27.760Z","updated":"2019-01-30T10:27:27.760Z","_id":"cjvyv444t0001hwazy2rbaflj","photos":[],"link":"","content":"<p>本文介绍如何在Linux 64位系统上通过二进制压缩文件离线安装安装node。  </p>\n<p>1、 到<a href=\"https://nodejs.org/dist/v10.15.0/node-v10.15.0-linux-x64.tar.xz\" target=\"_blank\" rel=\"noopener\">官网</a>下载安装包，并scp上传到目标服务器。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r ~/Downloads/node-v10.15.0-linux-x64.tar.xz user@host:path</span><br></pre></td></tr></table></figure>\n<p>2、将二进制存档解压缩到您要安装Node的任何目录，我使用/usr/ local/lib/nodejs</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VERSION=v10.15.0</span><br><span class=\"line\">DISTRO=linux-x64</span><br><span class=\"line\">sudo mkdir /usr/<span class=\"built_in\">local</span>/lib/nodejs</span><br><span class=\"line\">sudo tar -xJvf node-<span class=\"variable\">$VERSION</span>-<span class=\"variable\">$DISTRO</span>.tar.xz -C /usr/<span class=\"built_in\">local</span>/lib/nodejs</span><br><span class=\"line\">sudo mv /usr/<span class=\"built_in\">local</span>/lib/nodejs/node-<span class=\"variable\">$VERSION</span>-<span class=\"variable\">$DISTRO</span> /usr/<span class=\"built_in\">local</span>/lib/nodejs/node-<span class=\"variable\">$VERSION</span></span><br></pre></td></tr></table></figure>\n<p>3、设置环境变量vim /etc/profile，将下面\b代码添加到文件最后</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Nodejs</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> NODEJS_HOME=/usr/<span class=\"built_in\">local</span>/lib/nodejs/node-<span class=\"variable\">$VERSION</span>/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$NODEJS_HOME</span>:<span class=\"variable\">$PATH</span></span><br></pre></td></tr></table></figure>\n<p>4、刷新文件配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">. /etc/profile</span><br></pre></td></tr></table></figure>\n<p>5、测试安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">npm version</span><br><span class=\"line\">npx -v</span><br></pre></td></tr></table></figure>\n<p>正常输出是：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">v10.15.0</span><br><span class=\"line\">npm version</span><br><span class=\"line\">&#123; npm: <span class=\"string\">'6.4.1'</span>,</span><br><span class=\"line\">  ares: <span class=\"string\">'1.15.0'</span>,</span><br><span class=\"line\">  cldr: <span class=\"string\">'33.1'</span>,</span><br><span class=\"line\">  http_parser: <span class=\"string\">'2.8.0'</span>,</span><br><span class=\"line\">  icu: <span class=\"string\">'62.1'</span>,</span><br><span class=\"line\">  modules: <span class=\"string\">'64'</span>,</span><br><span class=\"line\">  napi: <span class=\"string\">'3'</span>,</span><br><span class=\"line\">  nghttp2: <span class=\"string\">'1.34.0'</span>,</span><br><span class=\"line\">  node: <span class=\"string\">'10.15.0'</span>,</span><br><span class=\"line\">  openssl: <span class=\"string\">'1.1.0j'</span>,</span><br><span class=\"line\">  tz: <span class=\"string\">'2018e'</span>,</span><br><span class=\"line\">  unicode: <span class=\"string\">'11.0'</span>,</span><br><span class=\"line\">  uv: <span class=\"string\">'1.23.2'</span>,</span><br><span class=\"line\">  v8: <span class=\"string\">'6.8.275.32-node.45'</span>,</span><br><span class=\"line\">  zlib: <span class=\"string\">'1.2.11'</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>创建sudo链接：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ln -s /usr/<span class=\"built_in\">local</span>/lib/nodejs/node-<span class=\"variable\">$VERSION</span>/bin/node /usr/bin/node</span><br><span class=\"line\"></span><br><span class=\"line\">sudo ln -s /usr/<span class=\"built_in\">local</span>/lib/nodejs/node-<span class=\"variable\">$VERSION</span>/bin/npm /usr/bin/npm</span><br><span class=\"line\"></span><br><span class=\"line\">sudo ln -s /usr/<span class=\"built_in\">local</span>/lib/nodejs/node-<span class=\"variable\">$VERSION</span>/bin/npx /usr/bin/npx</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>本文介绍如何在Linux 64位系统上通过二进制压缩文件离线安装安装node。  </p>\n<p>1、 到<a href=\"https://nodejs.org/dist/v10.15.0/node-v10.15.0-linux-x64.tar.xz\" target=\"_blank\" rel=\"noopener\">官网</a>下载安装包，并scp上传到目标服务器。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r ~/Downloads/node-v10.15.0-linux-x64.tar.xz user@host:path</span><br></pre></td></tr></table></figure>\n<p>2、将二进制存档解压缩到您要安装Node的任何目录，我使用/usr/ local/lib/nodejs</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VERSION=v10.15.0</span><br><span class=\"line\">DISTRO=linux-x64</span><br><span class=\"line\">sudo mkdir /usr/<span class=\"built_in\">local</span>/lib/nodejs</span><br><span class=\"line\">sudo tar -xJvf node-<span class=\"variable\">$VERSION</span>-<span class=\"variable\">$DISTRO</span>.tar.xz -C /usr/<span class=\"built_in\">local</span>/lib/nodejs</span><br><span class=\"line\">sudo mv /usr/<span class=\"built_in\">local</span>/lib/nodejs/node-<span class=\"variable\">$VERSION</span>-<span class=\"variable\">$DISTRO</span> /usr/<span class=\"built_in\">local</span>/lib/nodejs/node-<span class=\"variable\">$VERSION</span></span><br></pre></td></tr></table></figure>\n<p>3、设置环境变量vim /etc/profile，将下面\b代码添加到文件最后</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Nodejs</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> NODEJS_HOME=/usr/<span class=\"built_in\">local</span>/lib/nodejs/node-<span class=\"variable\">$VERSION</span>/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$NODEJS_HOME</span>:<span class=\"variable\">$PATH</span></span><br></pre></td></tr></table></figure>\n<p>4、刷新文件配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">. /etc/profile</span><br></pre></td></tr></table></figure>\n<p>5、测试安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">npm version</span><br><span class=\"line\">npx -v</span><br></pre></td></tr></table></figure>\n<p>正常输出是：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">v10.15.0</span><br><span class=\"line\">npm version</span><br><span class=\"line\">&#123; npm: <span class=\"string\">'6.4.1'</span>,</span><br><span class=\"line\">  ares: <span class=\"string\">'1.15.0'</span>,</span><br><span class=\"line\">  cldr: <span class=\"string\">'33.1'</span>,</span><br><span class=\"line\">  http_parser: <span class=\"string\">'2.8.0'</span>,</span><br><span class=\"line\">  icu: <span class=\"string\">'62.1'</span>,</span><br><span class=\"line\">  modules: <span class=\"string\">'64'</span>,</span><br><span class=\"line\">  napi: <span class=\"string\">'3'</span>,</span><br><span class=\"line\">  nghttp2: <span class=\"string\">'1.34.0'</span>,</span><br><span class=\"line\">  node: <span class=\"string\">'10.15.0'</span>,</span><br><span class=\"line\">  openssl: <span class=\"string\">'1.1.0j'</span>,</span><br><span class=\"line\">  tz: <span class=\"string\">'2018e'</span>,</span><br><span class=\"line\">  unicode: <span class=\"string\">'11.0'</span>,</span><br><span class=\"line\">  uv: <span class=\"string\">'1.23.2'</span>,</span><br><span class=\"line\">  v8: <span class=\"string\">'6.8.275.32-node.45'</span>,</span><br><span class=\"line\">  zlib: <span class=\"string\">'1.2.11'</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>创建sudo链接：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ln -s /usr/<span class=\"built_in\">local</span>/lib/nodejs/node-<span class=\"variable\">$VERSION</span>/bin/node /usr/bin/node</span><br><span class=\"line\"></span><br><span class=\"line\">sudo ln -s /usr/<span class=\"built_in\">local</span>/lib/nodejs/node-<span class=\"variable\">$VERSION</span>/bin/npm /usr/bin/npm</span><br><span class=\"line\"></span><br><span class=\"line\">sudo ln -s /usr/<span class=\"built_in\">local</span>/lib/nodejs/node-<span class=\"variable\">$VERSION</span>/bin/npx /usr/bin/npx</span><br></pre></td></tr></table></figure>"},{"title":"Linux离线安装yarn和配置离线仓库","layout":"single","author_profile":true,"read_time":false,"comments":1,"related":true,"classes":"wide","_content":"\nyarn是Facebook团队开发的快速、可靠、安全的依赖管理工具。相比于npm包管理工具，yarn的离线模式更适用于在没有网络链接的情况下进行项目依赖安装及构建。\n\n## 优势\n\n* **极其快速**  \n  Yarn 会缓存它下载的每个包，所以无需重复下载。它还能并行化操作以最大化资源利用率，安装速度之快前所未有。\n\n* **特别安全**  \n  Yarn会在每个安装包被执行前校验其完整性。\n\n* **超级可靠**  \n  Yarn 使用格式详尽而又简洁的 lockfile文件 和确定性算法来安装依赖，能够保证在一个系统上的运行的安装过程也会以同样的方式运行在其他系统上。\n\n## 特点\n\n* **离线模式**  \n  如果你之前安装过某个包，你就可以在没有网络连接的情况下再次安装它。\n\n* **确定性**  \n  不管是什么顺序，在不同的机器上的依赖会以同一方式安装。\n\n* **网络性能**  \n  Yarn可以高效地队列化请求并且避免请求瀑布化，使网络利用率最大化。\n\n* **相同的软件包**  \n  从 npm 安装软件包并使用相同的包管理流程。\n\n* **网络适应**  \n  单个请求失败不会导致安装失败，请求失败时会重试。\n\n* **扁平模式**  \n  解析不匹配的依赖版本为一个单一的版本来避免导致多个版本。\n\n## 安装yarn\n\n1. 从[官网](https://yarnpkg.com/latest.tar.gz)下载源码包并上传到目标服务器\n   \n   ``` bash\n   scp -r ~/Downloads/yarn-v1.12.3.tar.gz user@host:path\n   ```\n2. 解压程序包到目标目录\n   \n   ``` bash\n   tar zvxf yarn-v1.12.3.tar.gz -C /opt\n   ```\n3. 设置环境变量vim /etc/profile，将下面\b代码添加到文件最后\n   \n   ``` bash\n   export NODEJS_HOME=/opt/yarn-v1.12.3/bin\n   export PATH=$NODEJS_HOME:$PATH\n   ```\n4. 刷新文件配置\n\n   ``` bash\n   . /etc/profile\n   ```\n5. 运行命令来测试 Yarn 是否安装：\n\n   ``` bash\n   yarn --version\n   ```\n## 配置离线镜像\n\n首先我们需要设置一个目录作为我们的“离线镜像”存储，我们可以使用yarn config命令：\n   \n``` bash\nyarn config set yarn-offline-mirror ./npm-packages-offline-cache\n```\n\n./npm-packages-offline-cache是​​相对于主文件夹的示例位置，其中所有source.tar.gz文件将从注册表下载。\n\n脱机镜像不会删除tar包。为了使缓存文件夹保持最新，您需要将以下内容添加到配置文件中：\n\n``` bash\nyarn config set yarn-offline-mirror-pruning true\n```\n如何测试以确保它处于脱机状态？\n\n* 使用“yarn cache clean”清除全局缓存\n* 关掉wifi\n* 运行“yarn install -offline”。离线标志将确保yarn不会到达网络\n\n简而言之，要为您的项目启用“离线镜像”，您需要：\n\n* 将“yarn-offline-mirror”配置添加到.yarnrc文件中\n* 使用“yarn install”命令生成一个新的yarn.lock","source":"_posts/2019-01-03-linux-yarn-install-offline.md","raw":"---\ntitle: Linux离线安装yarn和配置离线仓库\nlayout: single\nauthor_profile: true\nread_time: false\ncomments: null\nrelated: true\nclasses: wide\ncategories:\n- 技术文档\ntags:\n- linux\n- yarn\n---\n\nyarn是Facebook团队开发的快速、可靠、安全的依赖管理工具。相比于npm包管理工具，yarn的离线模式更适用于在没有网络链接的情况下进行项目依赖安装及构建。\n\n## 优势\n\n* **极其快速**  \n  Yarn 会缓存它下载的每个包，所以无需重复下载。它还能并行化操作以最大化资源利用率，安装速度之快前所未有。\n\n* **特别安全**  \n  Yarn会在每个安装包被执行前校验其完整性。\n\n* **超级可靠**  \n  Yarn 使用格式详尽而又简洁的 lockfile文件 和确定性算法来安装依赖，能够保证在一个系统上的运行的安装过程也会以同样的方式运行在其他系统上。\n\n## 特点\n\n* **离线模式**  \n  如果你之前安装过某个包，你就可以在没有网络连接的情况下再次安装它。\n\n* **确定性**  \n  不管是什么顺序，在不同的机器上的依赖会以同一方式安装。\n\n* **网络性能**  \n  Yarn可以高效地队列化请求并且避免请求瀑布化，使网络利用率最大化。\n\n* **相同的软件包**  \n  从 npm 安装软件包并使用相同的包管理流程。\n\n* **网络适应**  \n  单个请求失败不会导致安装失败，请求失败时会重试。\n\n* **扁平模式**  \n  解析不匹配的依赖版本为一个单一的版本来避免导致多个版本。\n\n## 安装yarn\n\n1. 从[官网](https://yarnpkg.com/latest.tar.gz)下载源码包并上传到目标服务器\n   \n   ``` bash\n   scp -r ~/Downloads/yarn-v1.12.3.tar.gz user@host:path\n   ```\n2. 解压程序包到目标目录\n   \n   ``` bash\n   tar zvxf yarn-v1.12.3.tar.gz -C /opt\n   ```\n3. 设置环境变量vim /etc/profile，将下面\b代码添加到文件最后\n   \n   ``` bash\n   export NODEJS_HOME=/opt/yarn-v1.12.3/bin\n   export PATH=$NODEJS_HOME:$PATH\n   ```\n4. 刷新文件配置\n\n   ``` bash\n   . /etc/profile\n   ```\n5. 运行命令来测试 Yarn 是否安装：\n\n   ``` bash\n   yarn --version\n   ```\n## 配置离线镜像\n\n首先我们需要设置一个目录作为我们的“离线镜像”存储，我们可以使用yarn config命令：\n   \n``` bash\nyarn config set yarn-offline-mirror ./npm-packages-offline-cache\n```\n\n./npm-packages-offline-cache是​​相对于主文件夹的示例位置，其中所有source.tar.gz文件将从注册表下载。\n\n脱机镜像不会删除tar包。为了使缓存文件夹保持最新，您需要将以下内容添加到配置文件中：\n\n``` bash\nyarn config set yarn-offline-mirror-pruning true\n```\n如何测试以确保它处于脱机状态？\n\n* 使用“yarn cache clean”清除全局缓存\n* 关掉wifi\n* 运行“yarn install -offline”。离线标志将确保yarn不会到达网络\n\n简而言之，要为您的项目启用“离线镜像”，您需要：\n\n* 将“yarn-offline-mirror”配置添加到.yarnrc文件中\n* 使用“yarn install”命令生成一个新的yarn.lock","slug":"2019-01-03-linux-yarn-install-offline","published":1,"date":"2019-01-30T10:27:27.761Z","updated":"2019-01-30T10:27:27.761Z","_id":"cjvyv444w0004hwazei7id7jd","photos":[],"link":"","content":"<p>yarn是Facebook团队开发的快速、可靠、安全的依赖管理工具。相比于npm包管理工具，yarn的离线模式更适用于在没有网络链接的情况下进行项目依赖安装及构建。</p>\n<h2 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h2><ul>\n<li><p><strong>极其快速</strong><br>Yarn 会缓存它下载的每个包，所以无需重复下载。它还能并行化操作以最大化资源利用率，安装速度之快前所未有。</p>\n</li>\n<li><p><strong>特别安全</strong><br>Yarn会在每个安装包被执行前校验其完整性。</p>\n</li>\n<li><p><strong>超级可靠</strong><br>Yarn 使用格式详尽而又简洁的 lockfile文件 和确定性算法来安装依赖，能够保证在一个系统上的运行的安装过程也会以同样的方式运行在其他系统上。</p>\n</li>\n</ul>\n<h2 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h2><ul>\n<li><p><strong>离线模式</strong><br>如果你之前安装过某个包，你就可以在没有网络连接的情况下再次安装它。</p>\n</li>\n<li><p><strong>确定性</strong><br>不管是什么顺序，在不同的机器上的依赖会以同一方式安装。</p>\n</li>\n<li><p><strong>网络性能</strong><br>Yarn可以高效地队列化请求并且避免请求瀑布化，使网络利用率最大化。</p>\n</li>\n<li><p><strong>相同的软件包</strong><br>从 npm 安装软件包并使用相同的包管理流程。</p>\n</li>\n<li><p><strong>网络适应</strong><br>单个请求失败不会导致安装失败，请求失败时会重试。</p>\n</li>\n<li><p><strong>扁平模式</strong><br>解析不匹配的依赖版本为一个单一的版本来避免导致多个版本。</p>\n</li>\n</ul>\n<h2 id=\"安装yarn\"><a href=\"#安装yarn\" class=\"headerlink\" title=\"安装yarn\"></a>安装yarn</h2><ol>\n<li><p>从<a href=\"https://yarnpkg.com/latest.tar.gz\" target=\"_blank\" rel=\"noopener\">官网</a>下载源码包并上传到目标服务器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r ~/Downloads/yarn-v1.12.3.tar.gz user@host:path</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解压程序包到目标目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zvxf yarn-v1.12.3.tar.gz -C /opt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置环境变量vim /etc/profile，将下面\b代码添加到文件最后</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> NODEJS_HOME=/opt/yarn-v1.12.3/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$NODEJS_HOME</span>:<span class=\"variable\">$PATH</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>刷新文件配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">. /etc/profile</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行命令来测试 Yarn 是否安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn --version</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"配置离线镜像\"><a href=\"#配置离线镜像\" class=\"headerlink\" title=\"配置离线镜像\"></a>配置离线镜像</h2><p>首先我们需要设置一个目录作为我们的“离线镜像”存储，我们可以使用yarn config命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn config <span class=\"built_in\">set</span> yarn-offline-mirror ./npm-packages-offline-cache</span><br></pre></td></tr></table></figure>\n<p>./npm-packages-offline-cache是​​相对于主文件夹的示例位置，其中所有source.tar.gz文件将从注册表下载。</p>\n<p>脱机镜像不会删除tar包。为了使缓存文件夹保持最新，您需要将以下内容添加到配置文件中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn config <span class=\"built_in\">set</span> yarn-offline-mirror-pruning <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>如何测试以确保它处于脱机状态？</p>\n<ul>\n<li>使用“yarn cache clean”清除全局缓存</li>\n<li>关掉wifi</li>\n<li>运行“yarn install -offline”。离线标志将确保yarn不会到达网络</li>\n</ul>\n<p>简而言之，要为您的项目启用“离线镜像”，您需要：</p>\n<ul>\n<li>将“yarn-offline-mirror”配置添加到.yarnrc文件中</li>\n<li>使用“yarn install”命令生成一个新的yarn.lock</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>yarn是Facebook团队开发的快速、可靠、安全的依赖管理工具。相比于npm包管理工具，yarn的离线模式更适用于在没有网络链接的情况下进行项目依赖安装及构建。</p>\n<h2 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h2><ul>\n<li><p><strong>极其快速</strong><br>Yarn 会缓存它下载的每个包，所以无需重复下载。它还能并行化操作以最大化资源利用率，安装速度之快前所未有。</p>\n</li>\n<li><p><strong>特别安全</strong><br>Yarn会在每个安装包被执行前校验其完整性。</p>\n</li>\n<li><p><strong>超级可靠</strong><br>Yarn 使用格式详尽而又简洁的 lockfile文件 和确定性算法来安装依赖，能够保证在一个系统上的运行的安装过程也会以同样的方式运行在其他系统上。</p>\n</li>\n</ul>\n<h2 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h2><ul>\n<li><p><strong>离线模式</strong><br>如果你之前安装过某个包，你就可以在没有网络连接的情况下再次安装它。</p>\n</li>\n<li><p><strong>确定性</strong><br>不管是什么顺序，在不同的机器上的依赖会以同一方式安装。</p>\n</li>\n<li><p><strong>网络性能</strong><br>Yarn可以高效地队列化请求并且避免请求瀑布化，使网络利用率最大化。</p>\n</li>\n<li><p><strong>相同的软件包</strong><br>从 npm 安装软件包并使用相同的包管理流程。</p>\n</li>\n<li><p><strong>网络适应</strong><br>单个请求失败不会导致安装失败，请求失败时会重试。</p>\n</li>\n<li><p><strong>扁平模式</strong><br>解析不匹配的依赖版本为一个单一的版本来避免导致多个版本。</p>\n</li>\n</ul>\n<h2 id=\"安装yarn\"><a href=\"#安装yarn\" class=\"headerlink\" title=\"安装yarn\"></a>安装yarn</h2><ol>\n<li><p>从<a href=\"https://yarnpkg.com/latest.tar.gz\" target=\"_blank\" rel=\"noopener\">官网</a>下载源码包并上传到目标服务器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r ~/Downloads/yarn-v1.12.3.tar.gz user@host:path</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解压程序包到目标目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zvxf yarn-v1.12.3.tar.gz -C /opt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置环境变量vim /etc/profile，将下面\b代码添加到文件最后</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> NODEJS_HOME=/opt/yarn-v1.12.3/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$NODEJS_HOME</span>:<span class=\"variable\">$PATH</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>刷新文件配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">. /etc/profile</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行命令来测试 Yarn 是否安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn --version</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"配置离线镜像\"><a href=\"#配置离线镜像\" class=\"headerlink\" title=\"配置离线镜像\"></a>配置离线镜像</h2><p>首先我们需要设置一个目录作为我们的“离线镜像”存储，我们可以使用yarn config命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn config <span class=\"built_in\">set</span> yarn-offline-mirror ./npm-packages-offline-cache</span><br></pre></td></tr></table></figure>\n<p>./npm-packages-offline-cache是​​相对于主文件夹的示例位置，其中所有source.tar.gz文件将从注册表下载。</p>\n<p>脱机镜像不会删除tar包。为了使缓存文件夹保持最新，您需要将以下内容添加到配置文件中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn config <span class=\"built_in\">set</span> yarn-offline-mirror-pruning <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>如何测试以确保它处于脱机状态？</p>\n<ul>\n<li>使用“yarn cache clean”清除全局缓存</li>\n<li>关掉wifi</li>\n<li>运行“yarn install -offline”。离线标志将确保yarn不会到达网络</li>\n</ul>\n<p>简而言之，要为您的项目启用“离线镜像”，您需要：</p>\n<ul>\n<li>将“yarn-offline-mirror”配置添加到.yarnrc文件中</li>\n<li>使用“yarn install”命令生成一个新的yarn.lock</li>\n</ul>\n"},{"title":"Linux安装升级jenkins","layout":"single","author_profile":true,"read_time":false,"comments":1,"related":true,"classes":"wide","_content":"\n## 本文介绍在centos操作系统下通过yum安装jenkins，并通过下载官方war包的方式升级。\n\n## 安装\n\n1. 安装JDK\n\n   ``` bash\n   yum install -y java\n   ```\n\n2. 安装Jenkins\n\n   ``` bash\n   # 如果没安装wget，可先安装或用curl\n   yum install -y wget\n\n   # 添加Jenkins库到yum库\n   wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\n\n   rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\n\n   yum install -y jenkins\n   ```\n\n3. 启动Jenkins服务\n\n   ``` bash\n   # 启动Jenkins\n   service jenkins start\n\n   # 停止Jenkins\n   service jenkins stop\n\n   # 重启Jenkins\n   service jenkins restart\n   ```\n\n4. 注意事项\n\n   Jenkins默认端口是8080，确保此端口不被占用或者修改Jenkins的默认端口，打开防火墙对该端口的拦截。\n\n   ``` bash\n   # 配置Jenkis的端口， 修改JENKINS_PORT=\"8080\"为目标端口\n   vi /etc/sysconfig/jenkins\n\n   # 开启防火墙端口\n   firewall-cmd --zone=public --add-port=8080/tcp --permanent\n\n   # 重启Jenkins服务\n   service jenkins restart\n   ```\n\n## 升级\n\n1. 下载官升升级war包，scp到目标服务器\n\n   ``` bash\n   cp ~/Downloads/jenkins.war user@ip:/usr/lib/jenkins/\n   ```\n\n2. 查看Jenkins服务启动的安装包位置\n\n   ``` bash\n   # 可以看到包的位置在/usr/lib/jenkins/jenkins.war\n   ps -ef | grep jenkins\n\n   # 用升级war包替换旧的安装包，重启Jenkins服务\n   service jenkins stop\n   service jenkins start\n   ```","source":"_posts/2019-01-08-linux-jenkins-install-yum.md","raw":"---\ntitle: Linux安装升级jenkins\nlayout: single\nauthor_profile: true\nread_time: false\ncomments: null\nrelated: true\nclasses: wide\ncategories:\n- 文章教程\ntags:\n- jenkins\n- linux\n- yum\n---\n\n## 本文介绍在centos操作系统下通过yum安装jenkins，并通过下载官方war包的方式升级。\n\n## 安装\n\n1. 安装JDK\n\n   ``` bash\n   yum install -y java\n   ```\n\n2. 安装Jenkins\n\n   ``` bash\n   # 如果没安装wget，可先安装或用curl\n   yum install -y wget\n\n   # 添加Jenkins库到yum库\n   wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\n\n   rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\n\n   yum install -y jenkins\n   ```\n\n3. 启动Jenkins服务\n\n   ``` bash\n   # 启动Jenkins\n   service jenkins start\n\n   # 停止Jenkins\n   service jenkins stop\n\n   # 重启Jenkins\n   service jenkins restart\n   ```\n\n4. 注意事项\n\n   Jenkins默认端口是8080，确保此端口不被占用或者修改Jenkins的默认端口，打开防火墙对该端口的拦截。\n\n   ``` bash\n   # 配置Jenkis的端口， 修改JENKINS_PORT=\"8080\"为目标端口\n   vi /etc/sysconfig/jenkins\n\n   # 开启防火墙端口\n   firewall-cmd --zone=public --add-port=8080/tcp --permanent\n\n   # 重启Jenkins服务\n   service jenkins restart\n   ```\n\n## 升级\n\n1. 下载官升升级war包，scp到目标服务器\n\n   ``` bash\n   cp ~/Downloads/jenkins.war user@ip:/usr/lib/jenkins/\n   ```\n\n2. 查看Jenkins服务启动的安装包位置\n\n   ``` bash\n   # 可以看到包的位置在/usr/lib/jenkins/jenkins.war\n   ps -ef | grep jenkins\n\n   # 用升级war包替换旧的安装包，重启Jenkins服务\n   service jenkins stop\n   service jenkins start\n   ```","slug":"2019-01-08-linux-jenkins-install-yum","published":1,"date":"2019-01-30T10:27:27.762Z","updated":"2019-02-15T06:05:28.965Z","_id":"cjvyv444x0005hwaztk9pigor","photos":[],"link":"","content":"<h2 id=\"本文介绍在centos操作系统下通过yum安装jenkins，并通过下载官方war包的方式升级。\"><a href=\"#本文介绍在centos操作系统下通过yum安装jenkins，并通过下载官方war包的方式升级。\" class=\"headerlink\" title=\"本文介绍在centos操作系统下通过yum安装jenkins，并通过下载官方war包的方式升级。\"></a>本文介绍在centos操作系统下通过yum安装jenkins，并通过下载官方war包的方式升级。</h2><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ol>\n<li><p>安装JDK</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y java</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装Jenkins</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 如果没安装wget，可先安装或用curl</span></span><br><span class=\"line\">yum install -y wget</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加Jenkins库到yum库</span></span><br><span class=\"line\">wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo</span><br><span class=\"line\"></span><br><span class=\"line\">rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key</span><br><span class=\"line\"></span><br><span class=\"line\">yum install -y jenkins</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动Jenkins服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动Jenkins</span></span><br><span class=\"line\">service jenkins start</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 停止Jenkins</span></span><br><span class=\"line\">service jenkins stop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启Jenkins</span></span><br><span class=\"line\">service jenkins restart</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>注意事项</p>\n<p>Jenkins默认端口是8080，确保此端口不被占用或者修改Jenkins的默认端口，打开防火墙对该端口的拦截。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置Jenkis的端口， 修改JENKINS_PORT=\"8080\"为目标端口</span></span><br><span class=\"line\">vi /etc/sysconfig/jenkins</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开启防火墙端口</span></span><br><span class=\"line\">firewall-cmd --zone=public --add-port=8080/tcp --permanent</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启Jenkins服务</span></span><br><span class=\"line\">service jenkins restart</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"升级\"><a href=\"#升级\" class=\"headerlink\" title=\"升级\"></a>升级</h2><ol>\n<li><p>下载官升升级war包，scp到目标服务器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp ~/Downloads/jenkins.war user@ip:/usr/lib/jenkins/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看Jenkins服务启动的安装包位置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 可以看到包的位置在/usr/lib/jenkins/jenkins.war</span></span><br><span class=\"line\">ps -ef | grep jenkins</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用升级war包替换旧的安装包，重启Jenkins服务</span></span><br><span class=\"line\">service jenkins stop</span><br><span class=\"line\">service jenkins start</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"本文介绍在centos操作系统下通过yum安装jenkins，并通过下载官方war包的方式升级。\"><a href=\"#本文介绍在centos操作系统下通过yum安装jenkins，并通过下载官方war包的方式升级。\" class=\"headerlink\" title=\"本文介绍在centos操作系统下通过yum安装jenkins，并通过下载官方war包的方式升级。\"></a>本文介绍在centos操作系统下通过yum安装jenkins，并通过下载官方war包的方式升级。</h2><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ol>\n<li><p>安装JDK</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y java</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装Jenkins</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 如果没安装wget，可先安装或用curl</span></span><br><span class=\"line\">yum install -y wget</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加Jenkins库到yum库</span></span><br><span class=\"line\">wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo</span><br><span class=\"line\"></span><br><span class=\"line\">rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key</span><br><span class=\"line\"></span><br><span class=\"line\">yum install -y jenkins</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动Jenkins服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动Jenkins</span></span><br><span class=\"line\">service jenkins start</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 停止Jenkins</span></span><br><span class=\"line\">service jenkins stop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启Jenkins</span></span><br><span class=\"line\">service jenkins restart</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>注意事项</p>\n<p>Jenkins默认端口是8080，确保此端口不被占用或者修改Jenkins的默认端口，打开防火墙对该端口的拦截。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置Jenkis的端口， 修改JENKINS_PORT=\"8080\"为目标端口</span></span><br><span class=\"line\">vi /etc/sysconfig/jenkins</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开启防火墙端口</span></span><br><span class=\"line\">firewall-cmd --zone=public --add-port=8080/tcp --permanent</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启Jenkins服务</span></span><br><span class=\"line\">service jenkins restart</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"升级\"><a href=\"#升级\" class=\"headerlink\" title=\"升级\"></a>升级</h2><ol>\n<li><p>下载官升升级war包，scp到目标服务器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp ~/Downloads/jenkins.war user@ip:/usr/lib/jenkins/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看Jenkins服务启动的安装包位置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 可以看到包的位置在/usr/lib/jenkins/jenkins.war</span></span><br><span class=\"line\">ps -ef | grep jenkins</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用升级war包替换旧的安装包，重启Jenkins服务</span></span><br><span class=\"line\">service jenkins stop</span><br><span class=\"line\">service jenkins start</span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"CAS入门","layout":"single","author_profile":true,"read_time":false,"comments":1,"related":true,"classes":"wide","_content":"\n企业单点登录 - CAS提供友好的开源社区，积极支持并为项目做出贡献。虽然该项目植根于高级开放源代码，但它已发展成为跨越财富500强企业和小型专用设备的国际受众。  \n\nCAS为Web提供企业单点登录服务：\n\n* 开放且文档齐全的协议开源\n* Java服务器组件\n* 可插入的身份验证支持（LDAP，数据库，X.509,2-factor）\n* 支持多种协议（CAS，SAML） ，OAuth，OpenID）Java，.Net，PHP，Perl，Apache，uPortal和其他\n* 客户端库集成了uPortal，BlueSocket，TikiWiki，Mule，Liferay，Moodle等\n* 社区文档和实现支持广泛的采用者社区\n\n## 资源链接\n\n* [官方网站](https://www.apereo.org/projects/cas)\n* [官方文档](https://apereo.github.io/cas/4.2.x/index.html)\n* [GitHub](https://github.com/apereo/cas)\n\n## 架构\n\n![cas架构图](https://apereo.github.io/cas/4.2.x/images/cas_architecture.png)\n\n### CAS服务器\n\nCAS服务器是基于Spring Framework构建的Java servlet，其主要职责是通过颁发和验证票证来对用户进行身份验证并授予对启用CAS的服务（通常称为CAS客户端）的访问权限。当服务器在成功登录后向用户发出票证授予票证（TGT）时，将创建SSO会话。使用TGT作为令牌，通过浏览器重定向，根据用户的请求向服务发出服务票据（ST）。随后通过反向信道通信在CAS服务器上验证ST。\n\n### CAS客户端\n\n术语“CAS客户端”在其通用使用中具有两个不同的含义。 CAS客户端是任何启用CAS的应用程序，可以通过支持的协议与服务器通信。 CAS客户端也是可以与各种软件平台和应用程序集成的软件包，以便通过某种认证协议（例如CAS，SAML，OAuth）与CAS服务器通信。已经开发了支持许多软件平台和产品的CAS客户。\n\n平台：\n\n* Apache httpd Server ([mod_auth_cas module](https://github.com/Jasig/mod_auth_cas))\n* Java ([Java CAS Client](https://github.com/apereo/java-cas-client))\n* .NET ([.NET CAS Client](https://github.com/apereo/dotnet-cas-client))\n* PHP (phpCAS)\n* Perl (PerlCAS)\n* Python (pycas)\n* Ruby (rubycas-client)\n\n应用：\n\n* Outlook Web Application (ClearPass + .NET CAS Client)\n* Atlassian Confluence\n* Atlassian JIRA\n* Drupal\n* Liferay\n* uPortal\n\n### 协议\n\n客户端通过几种支持的协议与服务器通信。所有支持的协议在概念上都是相似的，但有些协议具有使其适用于特定应用程序或用例的特征或特征。例如，CAS协议支持委托（代理）身份验证，SAML协议支持属性释放和单点注销。\n\n支持的协议：\n\n* [CAS (versions 1, 2, and 3)](https://apereo.github.io/cas/4.2.x/protocol/CAS-Protocol.htmlv)\n* [SAML 1.1](https://apereo.github.io/cas/4.2.x/protocol/SAML-Protocol.html)\n* [OpenID](https://apereo.github.io/cas/4.2.x/protocol/OpenID-Protocol.html)\n* [OAuth (1.0, 2.0)](https://apereo.github.io/cas/4.2.x/protocol/OAuth-Protocol.html)\n\n### 组件\n\n根据三层子系统描述CAS服务器是很有帮助的：\n\n* Web (Spring MVC/Spring Webflow)\n* [Ticketing](https://apereo.github.io/cas/4.2.x/installation/Configuring-Ticketing-Components.html)\n* [Authentication](https://apereo.github.io/cas/4.2.x/installation/Configuring-Authentication-Components.html)\n\n几乎所有部署注意事项和组件配置都涉及这三个子系统。 Web层是与包括CAS客户端在内的所有外部系统进行通信的端点。 Web层委托票务子系统生成CAS客户端访问的票证。 SSO会话开始于成功验证时发出票证授予票证，因此票务子系统经常委托给验证子系统。\n\n认证系统通常仅在SSO会话开始时处理请求，尽管存在可以调用它的其他情况（例如，强制认证）。\n\n### Spring 框架\n\nCAS使用Spring Framework的许多方面;最值得注意的是，Spring MVC和Spring Webflow。 Spring为核心CAS代码库以及部署者提供了完整且可扩展的框架;通过挂钩CAS和Spring API扩展点，可以直接定制或扩展CAS行为。 Spring的一般知识有助于理解某些框架组件之间的相互作用，但并不是严格要求的。但是，用于配置CAS和Spring组件的基于XML的配置是安装，定制和扩展的核心问题。通常使用XML的能力和特别是Spring IOC容器是CAS安装的先决条件。\n\n## 安装要求\n\n要求概览：\n\n1. [Java](http://www.java.com/) >=1.7\n2. [支持servlet规范的Servlet容器](http://tomcat.apache.org/) >=3.0\n3. [Apache Maven](http://maven.apache.org/) >=3.3\n4. [熟悉Spring框架](http://www.springsource.org/)\n5. 互联网连接\n\n根据配置组件的选择，可能还有其他要求，例如LDAP目录，数据库和缓存基础结构。但是，在大多数情况下，对于选择具有明确硬件和软件依赖性的组件的部署者来说，要求应该是不言而喻的。在任何其他要求不明显的情况下，组件配置的讨论应该提到系统，软件，硬件和其他要求。\n\n### Servlet容器\n\nCAS没有官方支持的servlet容器，但[Apache Tomcat](http://tomcat.apache.org/)是最常用的。对特定servlet容器的支持取决于社区成员的专业知识，但已知以下工作正常并且应该获得[社区讨论邮件列表](https://apereo.github.io/cas/4.2.x/Mailing-Lists.html)的优先支持：\n\n* [JBoss]( http://www.jboss.org/)\n* [Jetty](http://www.eclipse.org/jetty/)\n* [GlassFish](http://glassfish.java.net/)\n* [WebSphere](http://www.ibm.com/software/websphere/)\n\n### Apache Maven\n\nCAS使用Maven构建和创建可部署的软件包，以便安装到Java servlet容器中。强烈建议使用Maven进行CAS安装过程所需的配置管理。 CAS基本上是一个复杂的软件产品，它嵌入并紧密集成到机构的软件环境中。因此，它倾向于要求定制远远超出交钥匙解决方案，并且集成要求往往会随着时间的推移而变化。像[Maven WAR overlay](https://apereo.github.io/cas/4.2.x/installation/Maven-Overlay-Installation.html)这样的基于源的安装过程为复杂和动态的需求提供了直接而灵活的解决方案。虽然它确实需要高昂的前期学习成本，但从长远来看，它可以获得许多好处\n\n### 互联网连接\n\n任何基于Maven的项目的构建阶段通常都需要Internet连接，包括用于安装CAS的推荐Maven WAR覆盖。 Maven通过搜索包含本地下载和安装的工件（大多数情况下为jar文件）的在线存储库来解析依赖关系。虽然可以通过替换Maven配置设置来覆盖此行为，但它被视为高级用法，不受支持。\n\n克服CAS服务器上缺少Internet连接的常见解决方案是在具有Internet连接的专用构建主机上构建CAS。随后将构建生成的cas.war文件复制到CAS服务器以进行部署。\n\n## 安全指南\n\nCAS是一种安全软件，可为基于Web的应用程序提供基于Web的安全单点登录。单点登录在安全性和便利性方面提供了双赢：它减少了对单个受信任凭证代理的密码暴露，同时透明地提供对多个服务的访问而无需重复登录。 CAS的使用通常会改善安全环境，但是应该考虑几种CAS配置，策略和部署问题以实现适当的安全性。\n\n### 系统安全注意事项\n\n#### 安全传输（https）\n\n与CAS服务器的所有通信必须通过安全信道（即TLSv1）进行。此要求有两个主要理由：\n\n1. 身份验证过程需要传输安全凭据。\n2.  CAS票证授予票证是不记名令牌。\n\n由于任一数据的公开都会允许冒充攻击，因此保护CAS客户端和CAS服务器之间的通信通道至关重要。\n\n实际上，这意味着所有CAS URL必须使用HTTPS，但这也意味着必须使用HTTPS完成从CAS服务器到应用程序的所有连接：\n\n1. 当生成的服务票据被发送回“服务”URL上的应用程序时。\n2.  当调用代理回调网址时。\n\n#### 与依赖系统的连接\n\nCAS通常需要连接到其他系统，例如LDAP目录，数据库和缓存服务。我们通常建议在可能的情况下对这些系统使用安全传输（SSL / TLS，IPSec），但可能存在补偿性控制，这使得安全传输成为必要。具有严格访问控制的专用网络和企业网络是常见的例外情况，但仍建议使用安全传输。客户端认证验证可以是LDAP提供足够安全性的另一个好方案。\n\n如前所述，必须确保与其他系统的连接。但是，如果CAS服务器部署在多个节点上，则同样适用于CAS服务器本身。如果基于缓存的故障单注册表在单个CAS服务器上运行时没有任何安全问题，则在网络未受保护时使用多个节点时，同步可能会成为安全问题。\n\n如果没有正确保护，任何磁盘存储也都容易受到攻可以关闭EhCache溢出到磁盘以增加保护，而高级加密数据机制应该用于数据库磁盘存储。\n\n### 部署驱动的安全功能\n\nCAS支持许多可用于实现各种安全策略的功能。通过CAS配置和CAS客户端集成提供以下功能。请注意，许多功能都是开箱即用的，而其他功能则需要显式设置。\n\n#### 强制认证\n\n许多CAS客户端和支持的协议支持强制身份验证的概念，用户必须重新进行身份验证才能访问特定服务。 CAS协议通过renew参数支持强制认证。强制身份验证为SSO会话的主体身份提供了额外的保证，因为用户必须在访问之前验证其凭据。强制认证适用于需要或强制要求更高安全性的服务。通常，强制身份验证是基于每个服务配置的，但是服务管理工具通过集中安全策略为实施强制身份验证提供了一些支持。强制认证可以与多因素认证特征组合以实现任意特定于服务的访问控制策略。\n\n#### 被动认证\n\n某些CAS协议支持被动身份验证，其中在请求时匿名授予对受CAS保护的服务的访问权限。 CASv2和CASv3协议通过网关功能支持此功能。被动认证补充了强制认证;强制身份验证需要身份验证才能访问服务，被动身份验证允许服务访问，尽管是匿名的，无需身份验证。\n\n#### 代理验证\n\n代理身份验证或委派身份验证提供了CAS的强大，重要且可能具有安全性的功能。 CASv2和CASv3协议支持代理身份验证，并由代表用户的服务请求的代理票证调解;因此，服务代理用户的认证。代理身份验证通常用于服务无法直接与用户交互的情况，也可用作将最终用户凭据重放到服务的替代方法。\n\n然而，代理票据存在风险，因为接受代理票据的服务负责验证代理链（最终用户的认证已经被委托到达票证验证服务的服务列表）。通过简单地针对/ serviceValidate验证端点验证票证，服务可以完全选择不接受代理票证（并避免验证代理链的责任），但是经验表明很容易对此进行混淆并配置为无意中使用/ proxyValidate端点不仔细检查故障单验证响应中出现的任何代理链。因此，代理身份验证需要仔细配置以进行适当的安如果不需要代理身份验证，建议在CAS服务器上禁用代理身份验证组件。\n\n过去，任何服务都可以获取代理授予票证，并从中获取代理票证以访问任何其他服务。换句话说，安全模型是分散的而不是集中的。服务管理设施通过暴露可以基于每个服务启用或禁用的代理验证标志来提供对代理验证的一些集中控制。默认情况下，注册服务未授予代理身份验证功能。\n\n#### 多因素身份验证\n\nCAS以两种模式之一提供对多因素身份验证的支持：全局和单服务。登录表单上总是需要多个凭证的全局情况很简单：修改用户界面以接受多个凭证，并将身份验证组件配置为要求成功验证所有提供的凭据。\n\n单服务案例更有趣，更复杂：\n\n* 必须建立凭证和凭证组的身份保证级别（LOA）。\n* 必须根据服务建立安全策略与凭证LOA。\n* 必须通过服务管理工具配置服务访问策略。\n\n前两项任务至关重要，但超出了本文档的范围。通过服务管理工具应用服务访问策略是通过声明必须成功验证凭证以允许访问的验证处理程序来实现的;例如，LDAP身份验证处理程序和RSA SecureID身份验证处理程序。\n\n由于多因素身份验证需要开发机构安全策略，高级组件配置（以及可能的自定义组件开发）和UI设计，因此应将其视为框架而非功能。有关配置问题和实施建议的详细讨论，请参阅多因素配置部分。\n\n#### 凭据缓存和恢复\n\nClearPass扩展提供了一种机制，用于捕获主要身份验证凭据，对其进行缓存（加密），并根据需要恢复以访问旧服务。虽然建议使用代理身份验证代替密码重放，但可能需要将旧服务与CAS集成。有关详细信息，请参阅ClearPass文档。\n\n#### 安全响应标头\n\n作为CAS安全筛选器的一部分，CAS项目自动提供必要的配置，以将HTTP安全标头插入Web响应中，以防止HSTS，XSS，X-FRAME和其他攻击。默认情况下，这些设置目前处于关闭状态，可通过以下设置启用：\n\n``` bash\n# httpresponse.header.cache=false\n# httpresponse.header.hsts=false\n# httpresponse.header.xframe=false\n# httpresponse.header.xcontent=false\n# httpresponse.header.xss=false\n```\n\n要查看并了解有关这些选项的更多信息，请访问此[指南](https://github.com/apereo/cas-server-security-filter)。\n\n## 高可用性指南(HA /群集)\n\n高度可用的CAS部署是为了响应各种故障模式而提供弹性的部署，以便尽管出现故障，CAS仍继续提供SSO服务。我们提供推荐的体系结构，为规划和执行符合机构性能和可用性要求的CAS部署提供了一个起点。它还提供了一个框架，用于理解由HA考虑因素强加的CAS软件组件要求。\n\n通过确保有足够的冗余来实现CAS的高可用性（HA）配置，以便在面对组件故障时服务是稳健的，并且可以在没有服务停机的情况下完成日常维护。这可以通过多节点实现，在较小程度上可以通过具有高级虚拟机功能的单节点CAS实现。本文档将重点介绍实现HA所需的CAS Server组件。对HA配置的更加定量的分析取决于支持基础设施和服务，超出了本文档的范围。\n\nCAS服务器软件具有非常可靠的良好记录。但是，CAS服务器只是软件和硬件的一小部分，认证必须遍历才能顺利运行。集群通常使用集群，不仅用于负载处理，还用于故障转移。即使没有发生故障，有时也需要重新启动服务器。例如，如果安装了操作系统级别的严重安全修复程序，则应立即重新启动服务器。在CAS服务器集群中，即使在最繁忙的时间，也可以通过滚动重启轻松完成。\n\n传统上操作单个服务器会延迟重启，直到较不繁忙的时间，同时运行已知漏洞。然而，最近随着虚拟机技术的日益接受及其固有的冗余和容错性，单节点CAS已经能够实现类似的质量。\n\n### 推荐架构\n\n下图突出显示了高可用CAS部署的重要方面。\n\n[CAS集群架构](https://apereo.github.io/cas/4.2.x/images/recommended_ha_architecture.png)\n\n值得指出这种架构的一些重要特征：\n\n* 从属系统可以容忍多达N-1个节点故障。 （其中N是节点总数。）\n* CAS本身可以容忍多达N-1个节点故障。\n* 丢失缓存节点不会导致复制缓存中的SSO状态数据（即票据）丢失。\n* 丢失缓存节点可能导致非复制缓存中的SSO状态数据丢失（例如，memcached）。\n* SSO状态数据的丢失始终是优雅的：用户只需重新进行身份验证。\n\n在详细讨论推荐架构的各个方面之前，我们提供了规划高可用性部署的指导原则：\n\n``` text\n追求简单\n设计满足性能和可用性要求的最简单解决方案。\n```\n\n经验表明，简单性是成功和强大的HA部署的重要系统特征。力求简洁，您将获得良好的服务。","source":"_posts/2018-12-29-learn-about-cas.md","raw":"---\ntitle: CAS入门\nlayout: single\nauthor_profile: true\nread_time: false\ncomments: null\nrelated: true\nclasses: wide\ncategories:\n- 技术文档\ntags:\n- CAS\n- 单点登录\n- 入门\n---\n\n企业单点登录 - CAS提供友好的开源社区，积极支持并为项目做出贡献。虽然该项目植根于高级开放源代码，但它已发展成为跨越财富500强企业和小型专用设备的国际受众。  \n\nCAS为Web提供企业单点登录服务：\n\n* 开放且文档齐全的协议开源\n* Java服务器组件\n* 可插入的身份验证支持（LDAP，数据库，X.509,2-factor）\n* 支持多种协议（CAS，SAML） ，OAuth，OpenID）Java，.Net，PHP，Perl，Apache，uPortal和其他\n* 客户端库集成了uPortal，BlueSocket，TikiWiki，Mule，Liferay，Moodle等\n* 社区文档和实现支持广泛的采用者社区\n\n## 资源链接\n\n* [官方网站](https://www.apereo.org/projects/cas)\n* [官方文档](https://apereo.github.io/cas/4.2.x/index.html)\n* [GitHub](https://github.com/apereo/cas)\n\n## 架构\n\n![cas架构图](https://apereo.github.io/cas/4.2.x/images/cas_architecture.png)\n\n### CAS服务器\n\nCAS服务器是基于Spring Framework构建的Java servlet，其主要职责是通过颁发和验证票证来对用户进行身份验证并授予对启用CAS的服务（通常称为CAS客户端）的访问权限。当服务器在成功登录后向用户发出票证授予票证（TGT）时，将创建SSO会话。使用TGT作为令牌，通过浏览器重定向，根据用户的请求向服务发出服务票据（ST）。随后通过反向信道通信在CAS服务器上验证ST。\n\n### CAS客户端\n\n术语“CAS客户端”在其通用使用中具有两个不同的含义。 CAS客户端是任何启用CAS的应用程序，可以通过支持的协议与服务器通信。 CAS客户端也是可以与各种软件平台和应用程序集成的软件包，以便通过某种认证协议（例如CAS，SAML，OAuth）与CAS服务器通信。已经开发了支持许多软件平台和产品的CAS客户。\n\n平台：\n\n* Apache httpd Server ([mod_auth_cas module](https://github.com/Jasig/mod_auth_cas))\n* Java ([Java CAS Client](https://github.com/apereo/java-cas-client))\n* .NET ([.NET CAS Client](https://github.com/apereo/dotnet-cas-client))\n* PHP (phpCAS)\n* Perl (PerlCAS)\n* Python (pycas)\n* Ruby (rubycas-client)\n\n应用：\n\n* Outlook Web Application (ClearPass + .NET CAS Client)\n* Atlassian Confluence\n* Atlassian JIRA\n* Drupal\n* Liferay\n* uPortal\n\n### 协议\n\n客户端通过几种支持的协议与服务器通信。所有支持的协议在概念上都是相似的，但有些协议具有使其适用于特定应用程序或用例的特征或特征。例如，CAS协议支持委托（代理）身份验证，SAML协议支持属性释放和单点注销。\n\n支持的协议：\n\n* [CAS (versions 1, 2, and 3)](https://apereo.github.io/cas/4.2.x/protocol/CAS-Protocol.htmlv)\n* [SAML 1.1](https://apereo.github.io/cas/4.2.x/protocol/SAML-Protocol.html)\n* [OpenID](https://apereo.github.io/cas/4.2.x/protocol/OpenID-Protocol.html)\n* [OAuth (1.0, 2.0)](https://apereo.github.io/cas/4.2.x/protocol/OAuth-Protocol.html)\n\n### 组件\n\n根据三层子系统描述CAS服务器是很有帮助的：\n\n* Web (Spring MVC/Spring Webflow)\n* [Ticketing](https://apereo.github.io/cas/4.2.x/installation/Configuring-Ticketing-Components.html)\n* [Authentication](https://apereo.github.io/cas/4.2.x/installation/Configuring-Authentication-Components.html)\n\n几乎所有部署注意事项和组件配置都涉及这三个子系统。 Web层是与包括CAS客户端在内的所有外部系统进行通信的端点。 Web层委托票务子系统生成CAS客户端访问的票证。 SSO会话开始于成功验证时发出票证授予票证，因此票务子系统经常委托给验证子系统。\n\n认证系统通常仅在SSO会话开始时处理请求，尽管存在可以调用它的其他情况（例如，强制认证）。\n\n### Spring 框架\n\nCAS使用Spring Framework的许多方面;最值得注意的是，Spring MVC和Spring Webflow。 Spring为核心CAS代码库以及部署者提供了完整且可扩展的框架;通过挂钩CAS和Spring API扩展点，可以直接定制或扩展CAS行为。 Spring的一般知识有助于理解某些框架组件之间的相互作用，但并不是严格要求的。但是，用于配置CAS和Spring组件的基于XML的配置是安装，定制和扩展的核心问题。通常使用XML的能力和特别是Spring IOC容器是CAS安装的先决条件。\n\n## 安装要求\n\n要求概览：\n\n1. [Java](http://www.java.com/) >=1.7\n2. [支持servlet规范的Servlet容器](http://tomcat.apache.org/) >=3.0\n3. [Apache Maven](http://maven.apache.org/) >=3.3\n4. [熟悉Spring框架](http://www.springsource.org/)\n5. 互联网连接\n\n根据配置组件的选择，可能还有其他要求，例如LDAP目录，数据库和缓存基础结构。但是，在大多数情况下，对于选择具有明确硬件和软件依赖性的组件的部署者来说，要求应该是不言而喻的。在任何其他要求不明显的情况下，组件配置的讨论应该提到系统，软件，硬件和其他要求。\n\n### Servlet容器\n\nCAS没有官方支持的servlet容器，但[Apache Tomcat](http://tomcat.apache.org/)是最常用的。对特定servlet容器的支持取决于社区成员的专业知识，但已知以下工作正常并且应该获得[社区讨论邮件列表](https://apereo.github.io/cas/4.2.x/Mailing-Lists.html)的优先支持：\n\n* [JBoss]( http://www.jboss.org/)\n* [Jetty](http://www.eclipse.org/jetty/)\n* [GlassFish](http://glassfish.java.net/)\n* [WebSphere](http://www.ibm.com/software/websphere/)\n\n### Apache Maven\n\nCAS使用Maven构建和创建可部署的软件包，以便安装到Java servlet容器中。强烈建议使用Maven进行CAS安装过程所需的配置管理。 CAS基本上是一个复杂的软件产品，它嵌入并紧密集成到机构的软件环境中。因此，它倾向于要求定制远远超出交钥匙解决方案，并且集成要求往往会随着时间的推移而变化。像[Maven WAR overlay](https://apereo.github.io/cas/4.2.x/installation/Maven-Overlay-Installation.html)这样的基于源的安装过程为复杂和动态的需求提供了直接而灵活的解决方案。虽然它确实需要高昂的前期学习成本，但从长远来看，它可以获得许多好处\n\n### 互联网连接\n\n任何基于Maven的项目的构建阶段通常都需要Internet连接，包括用于安装CAS的推荐Maven WAR覆盖。 Maven通过搜索包含本地下载和安装的工件（大多数情况下为jar文件）的在线存储库来解析依赖关系。虽然可以通过替换Maven配置设置来覆盖此行为，但它被视为高级用法，不受支持。\n\n克服CAS服务器上缺少Internet连接的常见解决方案是在具有Internet连接的专用构建主机上构建CAS。随后将构建生成的cas.war文件复制到CAS服务器以进行部署。\n\n## 安全指南\n\nCAS是一种安全软件，可为基于Web的应用程序提供基于Web的安全单点登录。单点登录在安全性和便利性方面提供了双赢：它减少了对单个受信任凭证代理的密码暴露，同时透明地提供对多个服务的访问而无需重复登录。 CAS的使用通常会改善安全环境，但是应该考虑几种CAS配置，策略和部署问题以实现适当的安全性。\n\n### 系统安全注意事项\n\n#### 安全传输（https）\n\n与CAS服务器的所有通信必须通过安全信道（即TLSv1）进行。此要求有两个主要理由：\n\n1. 身份验证过程需要传输安全凭据。\n2.  CAS票证授予票证是不记名令牌。\n\n由于任一数据的公开都会允许冒充攻击，因此保护CAS客户端和CAS服务器之间的通信通道至关重要。\n\n实际上，这意味着所有CAS URL必须使用HTTPS，但这也意味着必须使用HTTPS完成从CAS服务器到应用程序的所有连接：\n\n1. 当生成的服务票据被发送回“服务”URL上的应用程序时。\n2.  当调用代理回调网址时。\n\n#### 与依赖系统的连接\n\nCAS通常需要连接到其他系统，例如LDAP目录，数据库和缓存服务。我们通常建议在可能的情况下对这些系统使用安全传输（SSL / TLS，IPSec），但可能存在补偿性控制，这使得安全传输成为必要。具有严格访问控制的专用网络和企业网络是常见的例外情况，但仍建议使用安全传输。客户端认证验证可以是LDAP提供足够安全性的另一个好方案。\n\n如前所述，必须确保与其他系统的连接。但是，如果CAS服务器部署在多个节点上，则同样适用于CAS服务器本身。如果基于缓存的故障单注册表在单个CAS服务器上运行时没有任何安全问题，则在网络未受保护时使用多个节点时，同步可能会成为安全问题。\n\n如果没有正确保护，任何磁盘存储也都容易受到攻可以关闭EhCache溢出到磁盘以增加保护，而高级加密数据机制应该用于数据库磁盘存储。\n\n### 部署驱动的安全功能\n\nCAS支持许多可用于实现各种安全策略的功能。通过CAS配置和CAS客户端集成提供以下功能。请注意，许多功能都是开箱即用的，而其他功能则需要显式设置。\n\n#### 强制认证\n\n许多CAS客户端和支持的协议支持强制身份验证的概念，用户必须重新进行身份验证才能访问特定服务。 CAS协议通过renew参数支持强制认证。强制身份验证为SSO会话的主体身份提供了额外的保证，因为用户必须在访问之前验证其凭据。强制认证适用于需要或强制要求更高安全性的服务。通常，强制身份验证是基于每个服务配置的，但是服务管理工具通过集中安全策略为实施强制身份验证提供了一些支持。强制认证可以与多因素认证特征组合以实现任意特定于服务的访问控制策略。\n\n#### 被动认证\n\n某些CAS协议支持被动身份验证，其中在请求时匿名授予对受CAS保护的服务的访问权限。 CASv2和CASv3协议通过网关功能支持此功能。被动认证补充了强制认证;强制身份验证需要身份验证才能访问服务，被动身份验证允许服务访问，尽管是匿名的，无需身份验证。\n\n#### 代理验证\n\n代理身份验证或委派身份验证提供了CAS的强大，重要且可能具有安全性的功能。 CASv2和CASv3协议支持代理身份验证，并由代表用户的服务请求的代理票证调解;因此，服务代理用户的认证。代理身份验证通常用于服务无法直接与用户交互的情况，也可用作将最终用户凭据重放到服务的替代方法。\n\n然而，代理票据存在风险，因为接受代理票据的服务负责验证代理链（最终用户的认证已经被委托到达票证验证服务的服务列表）。通过简单地针对/ serviceValidate验证端点验证票证，服务可以完全选择不接受代理票证（并避免验证代理链的责任），但是经验表明很容易对此进行混淆并配置为无意中使用/ proxyValidate端点不仔细检查故障单验证响应中出现的任何代理链。因此，代理身份验证需要仔细配置以进行适当的安如果不需要代理身份验证，建议在CAS服务器上禁用代理身份验证组件。\n\n过去，任何服务都可以获取代理授予票证，并从中获取代理票证以访问任何其他服务。换句话说，安全模型是分散的而不是集中的。服务管理设施通过暴露可以基于每个服务启用或禁用的代理验证标志来提供对代理验证的一些集中控制。默认情况下，注册服务未授予代理身份验证功能。\n\n#### 多因素身份验证\n\nCAS以两种模式之一提供对多因素身份验证的支持：全局和单服务。登录表单上总是需要多个凭证的全局情况很简单：修改用户界面以接受多个凭证，并将身份验证组件配置为要求成功验证所有提供的凭据。\n\n单服务案例更有趣，更复杂：\n\n* 必须建立凭证和凭证组的身份保证级别（LOA）。\n* 必须根据服务建立安全策略与凭证LOA。\n* 必须通过服务管理工具配置服务访问策略。\n\n前两项任务至关重要，但超出了本文档的范围。通过服务管理工具应用服务访问策略是通过声明必须成功验证凭证以允许访问的验证处理程序来实现的;例如，LDAP身份验证处理程序和RSA SecureID身份验证处理程序。\n\n由于多因素身份验证需要开发机构安全策略，高级组件配置（以及可能的自定义组件开发）和UI设计，因此应将其视为框架而非功能。有关配置问题和实施建议的详细讨论，请参阅多因素配置部分。\n\n#### 凭据缓存和恢复\n\nClearPass扩展提供了一种机制，用于捕获主要身份验证凭据，对其进行缓存（加密），并根据需要恢复以访问旧服务。虽然建议使用代理身份验证代替密码重放，但可能需要将旧服务与CAS集成。有关详细信息，请参阅ClearPass文档。\n\n#### 安全响应标头\n\n作为CAS安全筛选器的一部分，CAS项目自动提供必要的配置，以将HTTP安全标头插入Web响应中，以防止HSTS，XSS，X-FRAME和其他攻击。默认情况下，这些设置目前处于关闭状态，可通过以下设置启用：\n\n``` bash\n# httpresponse.header.cache=false\n# httpresponse.header.hsts=false\n# httpresponse.header.xframe=false\n# httpresponse.header.xcontent=false\n# httpresponse.header.xss=false\n```\n\n要查看并了解有关这些选项的更多信息，请访问此[指南](https://github.com/apereo/cas-server-security-filter)。\n\n## 高可用性指南(HA /群集)\n\n高度可用的CAS部署是为了响应各种故障模式而提供弹性的部署，以便尽管出现故障，CAS仍继续提供SSO服务。我们提供推荐的体系结构，为规划和执行符合机构性能和可用性要求的CAS部署提供了一个起点。它还提供了一个框架，用于理解由HA考虑因素强加的CAS软件组件要求。\n\n通过确保有足够的冗余来实现CAS的高可用性（HA）配置，以便在面对组件故障时服务是稳健的，并且可以在没有服务停机的情况下完成日常维护。这可以通过多节点实现，在较小程度上可以通过具有高级虚拟机功能的单节点CAS实现。本文档将重点介绍实现HA所需的CAS Server组件。对HA配置的更加定量的分析取决于支持基础设施和服务，超出了本文档的范围。\n\nCAS服务器软件具有非常可靠的良好记录。但是，CAS服务器只是软件和硬件的一小部分，认证必须遍历才能顺利运行。集群通常使用集群，不仅用于负载处理，还用于故障转移。即使没有发生故障，有时也需要重新启动服务器。例如，如果安装了操作系统级别的严重安全修复程序，则应立即重新启动服务器。在CAS服务器集群中，即使在最繁忙的时间，也可以通过滚动重启轻松完成。\n\n传统上操作单个服务器会延迟重启，直到较不繁忙的时间，同时运行已知漏洞。然而，最近随着虚拟机技术的日益接受及其固有的冗余和容错性，单节点CAS已经能够实现类似的质量。\n\n### 推荐架构\n\n下图突出显示了高可用CAS部署的重要方面。\n\n[CAS集群架构](https://apereo.github.io/cas/4.2.x/images/recommended_ha_architecture.png)\n\n值得指出这种架构的一些重要特征：\n\n* 从属系统可以容忍多达N-1个节点故障。 （其中N是节点总数。）\n* CAS本身可以容忍多达N-1个节点故障。\n* 丢失缓存节点不会导致复制缓存中的SSO状态数据（即票据）丢失。\n* 丢失缓存节点可能导致非复制缓存中的SSO状态数据丢失（例如，memcached）。\n* SSO状态数据的丢失始终是优雅的：用户只需重新进行身份验证。\n\n在详细讨论推荐架构的各个方面之前，我们提供了规划高可用性部署的指导原则：\n\n``` text\n追求简单\n设计满足性能和可用性要求的最简单解决方案。\n```\n\n经验表明，简单性是成功和强大的HA部署的重要系统特征。力求简洁，您将获得良好的服务。","slug":"2018-12-29-learn-about-cas","published":1,"date":"2019-01-30T10:27:27.758Z","updated":"2019-01-30T10:27:27.759Z","_id":"cjvyv4457000xhwazhwxlaqte","photos":[],"link":"","content":"<p>企业单点登录 - CAS提供友好的开源社区，积极支持并为项目做出贡献。虽然该项目植根于高级开放源代码，但它已发展成为跨越财富500强企业和小型专用设备的国际受众。  </p>\n<p>CAS为Web提供企业单点登录服务：</p>\n<ul>\n<li>开放且文档齐全的协议开源</li>\n<li>Java服务器组件</li>\n<li>可插入的身份验证支持（LDAP，数据库，X.509,2-factor）</li>\n<li>支持多种协议（CAS，SAML） ，OAuth，OpenID）Java，.Net，PHP，Perl，Apache，uPortal和其他</li>\n<li>客户端库集成了uPortal，BlueSocket，TikiWiki，Mule，Liferay，Moodle等</li>\n<li>社区文档和实现支持广泛的采用者社区</li>\n</ul>\n<h2 id=\"资源链接\"><a href=\"#资源链接\" class=\"headerlink\" title=\"资源链接\"></a>资源链接</h2><ul>\n<li><a href=\"https://www.apereo.org/projects/cas\" target=\"_blank\" rel=\"noopener\">官方网站</a></li>\n<li><a href=\"https://apereo.github.io/cas/4.2.x/index.html\" target=\"_blank\" rel=\"noopener\">官方文档</a></li>\n<li><a href=\"https://github.com/apereo/cas\" target=\"_blank\" rel=\"noopener\">GitHub</a></li>\n</ul>\n<h2 id=\"架构\"><a href=\"#架构\" class=\"headerlink\" title=\"架构\"></a>架构</h2><p><img src=\"https://apereo.github.io/cas/4.2.x/images/cas_architecture.png\" alt=\"cas架构图\"></p>\n<h3 id=\"CAS服务器\"><a href=\"#CAS服务器\" class=\"headerlink\" title=\"CAS服务器\"></a>CAS服务器</h3><p>CAS服务器是基于Spring Framework构建的Java servlet，其主要职责是通过颁发和验证票证来对用户进行身份验证并授予对启用CAS的服务（通常称为CAS客户端）的访问权限。当服务器在成功登录后向用户发出票证授予票证（TGT）时，将创建SSO会话。使用TGT作为令牌，通过浏览器重定向，根据用户的请求向服务发出服务票据（ST）。随后通过反向信道通信在CAS服务器上验证ST。</p>\n<h3 id=\"CAS客户端\"><a href=\"#CAS客户端\" class=\"headerlink\" title=\"CAS客户端\"></a>CAS客户端</h3><p>术语“CAS客户端”在其通用使用中具有两个不同的含义。 CAS客户端是任何启用CAS的应用程序，可以通过支持的协议与服务器通信。 CAS客户端也是可以与各种软件平台和应用程序集成的软件包，以便通过某种认证协议（例如CAS，SAML，OAuth）与CAS服务器通信。已经开发了支持许多软件平台和产品的CAS客户。</p>\n<p>平台：</p>\n<ul>\n<li>Apache httpd Server (<a href=\"https://github.com/Jasig/mod_auth_cas\" target=\"_blank\" rel=\"noopener\">mod_auth_cas module</a>)</li>\n<li>Java (<a href=\"https://github.com/apereo/java-cas-client\" target=\"_blank\" rel=\"noopener\">Java CAS Client</a>)</li>\n<li>.NET (<a href=\"https://github.com/apereo/dotnet-cas-client\" target=\"_blank\" rel=\"noopener\">.NET CAS Client</a>)</li>\n<li>PHP (phpCAS)</li>\n<li>Perl (PerlCAS)</li>\n<li>Python (pycas)</li>\n<li>Ruby (rubycas-client)</li>\n</ul>\n<p>应用：</p>\n<ul>\n<li>Outlook Web Application (ClearPass + .NET CAS Client)</li>\n<li>Atlassian Confluence</li>\n<li>Atlassian JIRA</li>\n<li>Drupal</li>\n<li>Liferay</li>\n<li>uPortal</li>\n</ul>\n<h3 id=\"协议\"><a href=\"#协议\" class=\"headerlink\" title=\"协议\"></a>协议</h3><p>客户端通过几种支持的协议与服务器通信。所有支持的协议在概念上都是相似的，但有些协议具有使其适用于特定应用程序或用例的特征或特征。例如，CAS协议支持委托（代理）身份验证，SAML协议支持属性释放和单点注销。</p>\n<p>支持的协议：</p>\n<ul>\n<li><a href=\"https://apereo.github.io/cas/4.2.x/protocol/CAS-Protocol.htmlv\" target=\"_blank\" rel=\"noopener\">CAS (versions 1, 2, and 3)</a></li>\n<li><a href=\"https://apereo.github.io/cas/4.2.x/protocol/SAML-Protocol.html\" target=\"_blank\" rel=\"noopener\">SAML 1.1</a></li>\n<li><a href=\"https://apereo.github.io/cas/4.2.x/protocol/OpenID-Protocol.html\" target=\"_blank\" rel=\"noopener\">OpenID</a></li>\n<li><a href=\"https://apereo.github.io/cas/4.2.x/protocol/OAuth-Protocol.html\" target=\"_blank\" rel=\"noopener\">OAuth (1.0, 2.0)</a></li>\n</ul>\n<h3 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h3><p>根据三层子系统描述CAS服务器是很有帮助的：</p>\n<ul>\n<li>Web (Spring MVC/Spring Webflow)</li>\n<li><a href=\"https://apereo.github.io/cas/4.2.x/installation/Configuring-Ticketing-Components.html\" target=\"_blank\" rel=\"noopener\">Ticketing</a></li>\n<li><a href=\"https://apereo.github.io/cas/4.2.x/installation/Configuring-Authentication-Components.html\" target=\"_blank\" rel=\"noopener\">Authentication</a></li>\n</ul>\n<p>几乎所有部署注意事项和组件配置都涉及这三个子系统。 Web层是与包括CAS客户端在内的所有外部系统进行通信的端点。 Web层委托票务子系统生成CAS客户端访问的票证。 SSO会话开始于成功验证时发出票证授予票证，因此票务子系统经常委托给验证子系统。</p>\n<p>认证系统通常仅在SSO会话开始时处理请求，尽管存在可以调用它的其他情况（例如，强制认证）。</p>\n<h3 id=\"Spring-框架\"><a href=\"#Spring-框架\" class=\"headerlink\" title=\"Spring 框架\"></a>Spring 框架</h3><p>CAS使用Spring Framework的许多方面;最值得注意的是，Spring MVC和Spring Webflow。 Spring为核心CAS代码库以及部署者提供了完整且可扩展的框架;通过挂钩CAS和Spring API扩展点，可以直接定制或扩展CAS行为。 Spring的一般知识有助于理解某些框架组件之间的相互作用，但并不是严格要求的。但是，用于配置CAS和Spring组件的基于XML的配置是安装，定制和扩展的核心问题。通常使用XML的能力和特别是Spring IOC容器是CAS安装的先决条件。</p>\n<h2 id=\"安装要求\"><a href=\"#安装要求\" class=\"headerlink\" title=\"安装要求\"></a>安装要求</h2><p>要求概览：</p>\n<ol>\n<li><a href=\"http://www.java.com/\" target=\"_blank\" rel=\"noopener\">Java</a> &gt;=1.7</li>\n<li><a href=\"http://tomcat.apache.org/\" target=\"_blank\" rel=\"noopener\">支持servlet规范的Servlet容器</a> &gt;=3.0</li>\n<li><a href=\"http://maven.apache.org/\" target=\"_blank\" rel=\"noopener\">Apache Maven</a> &gt;=3.3</li>\n<li><a href=\"http://www.springsource.org/\" target=\"_blank\" rel=\"noopener\">熟悉Spring框架</a></li>\n<li>互联网连接</li>\n</ol>\n<p>根据配置组件的选择，可能还有其他要求，例如LDAP目录，数据库和缓存基础结构。但是，在大多数情况下，对于选择具有明确硬件和软件依赖性的组件的部署者来说，要求应该是不言而喻的。在任何其他要求不明显的情况下，组件配置的讨论应该提到系统，软件，硬件和其他要求。</p>\n<h3 id=\"Servlet容器\"><a href=\"#Servlet容器\" class=\"headerlink\" title=\"Servlet容器\"></a>Servlet容器</h3><p>CAS没有官方支持的servlet容器，但<a href=\"http://tomcat.apache.org/\" target=\"_blank\" rel=\"noopener\">Apache Tomcat</a>是最常用的。对特定servlet容器的支持取决于社区成员的专业知识，但已知以下工作正常并且应该获得<a href=\"https://apereo.github.io/cas/4.2.x/Mailing-Lists.html\" target=\"_blank\" rel=\"noopener\">社区讨论邮件列表</a>的优先支持：</p>\n<ul>\n<li><a href=\"http://www.jboss.org/\" target=\"_blank\" rel=\"noopener\">JBoss</a></li>\n<li><a href=\"http://www.eclipse.org/jetty/\" target=\"_blank\" rel=\"noopener\">Jetty</a></li>\n<li><a href=\"http://glassfish.java.net/\" target=\"_blank\" rel=\"noopener\">GlassFish</a></li>\n<li><a href=\"http://www.ibm.com/software/websphere/\" target=\"_blank\" rel=\"noopener\">WebSphere</a></li>\n</ul>\n<h3 id=\"Apache-Maven\"><a href=\"#Apache-Maven\" class=\"headerlink\" title=\"Apache Maven\"></a>Apache Maven</h3><p>CAS使用Maven构建和创建可部署的软件包，以便安装到Java servlet容器中。强烈建议使用Maven进行CAS安装过程所需的配置管理。 CAS基本上是一个复杂的软件产品，它嵌入并紧密集成到机构的软件环境中。因此，它倾向于要求定制远远超出交钥匙解决方案，并且集成要求往往会随着时间的推移而变化。像<a href=\"https://apereo.github.io/cas/4.2.x/installation/Maven-Overlay-Installation.html\" target=\"_blank\" rel=\"noopener\">Maven WAR overlay</a>这样的基于源的安装过程为复杂和动态的需求提供了直接而灵活的解决方案。虽然它确实需要高昂的前期学习成本，但从长远来看，它可以获得许多好处</p>\n<h3 id=\"互联网连接\"><a href=\"#互联网连接\" class=\"headerlink\" title=\"互联网连接\"></a>互联网连接</h3><p>任何基于Maven的项目的构建阶段通常都需要Internet连接，包括用于安装CAS的推荐Maven WAR覆盖。 Maven通过搜索包含本地下载和安装的工件（大多数情况下为jar文件）的在线存储库来解析依赖关系。虽然可以通过替换Maven配置设置来覆盖此行为，但它被视为高级用法，不受支持。</p>\n<p>克服CAS服务器上缺少Internet连接的常见解决方案是在具有Internet连接的专用构建主机上构建CAS。随后将构建生成的cas.war文件复制到CAS服务器以进行部署。</p>\n<h2 id=\"安全指南\"><a href=\"#安全指南\" class=\"headerlink\" title=\"安全指南\"></a>安全指南</h2><p>CAS是一种安全软件，可为基于Web的应用程序提供基于Web的安全单点登录。单点登录在安全性和便利性方面提供了双赢：它减少了对单个受信任凭证代理的密码暴露，同时透明地提供对多个服务的访问而无需重复登录。 CAS的使用通常会改善安全环境，但是应该考虑几种CAS配置，策略和部署问题以实现适当的安全性。</p>\n<h3 id=\"系统安全注意事项\"><a href=\"#系统安全注意事项\" class=\"headerlink\" title=\"系统安全注意事项\"></a>系统安全注意事项</h3><h4 id=\"安全传输（https）\"><a href=\"#安全传输（https）\" class=\"headerlink\" title=\"安全传输（https）\"></a>安全传输（https）</h4><p>与CAS服务器的所有通信必须通过安全信道（即TLSv1）进行。此要求有两个主要理由：</p>\n<ol>\n<li>身份验证过程需要传输安全凭据。</li>\n<li>CAS票证授予票证是不记名令牌。</li>\n</ol>\n<p>由于任一数据的公开都会允许冒充攻击，因此保护CAS客户端和CAS服务器之间的通信通道至关重要。</p>\n<p>实际上，这意味着所有CAS URL必须使用HTTPS，但这也意味着必须使用HTTPS完成从CAS服务器到应用程序的所有连接：</p>\n<ol>\n<li>当生成的服务票据被发送回“服务”URL上的应用程序时。</li>\n<li>当调用代理回调网址时。</li>\n</ol>\n<h4 id=\"与依赖系统的连接\"><a href=\"#与依赖系统的连接\" class=\"headerlink\" title=\"与依赖系统的连接\"></a>与依赖系统的连接</h4><p>CAS通常需要连接到其他系统，例如LDAP目录，数据库和缓存服务。我们通常建议在可能的情况下对这些系统使用安全传输（SSL / TLS，IPSec），但可能存在补偿性控制，这使得安全传输成为必要。具有严格访问控制的专用网络和企业网络是常见的例外情况，但仍建议使用安全传输。客户端认证验证可以是LDAP提供足够安全性的另一个好方案。</p>\n<p>如前所述，必须确保与其他系统的连接。但是，如果CAS服务器部署在多个节点上，则同样适用于CAS服务器本身。如果基于缓存的故障单注册表在单个CAS服务器上运行时没有任何安全问题，则在网络未受保护时使用多个节点时，同步可能会成为安全问题。</p>\n<p>如果没有正确保护，任何磁盘存储也都容易受到攻可以关闭EhCache溢出到磁盘以增加保护，而高级加密数据机制应该用于数据库磁盘存储。</p>\n<h3 id=\"部署驱动的安全功能\"><a href=\"#部署驱动的安全功能\" class=\"headerlink\" title=\"部署驱动的安全功能\"></a>部署驱动的安全功能</h3><p>CAS支持许多可用于实现各种安全策略的功能。通过CAS配置和CAS客户端集成提供以下功能。请注意，许多功能都是开箱即用的，而其他功能则需要显式设置。</p>\n<h4 id=\"强制认证\"><a href=\"#强制认证\" class=\"headerlink\" title=\"强制认证\"></a>强制认证</h4><p>许多CAS客户端和支持的协议支持强制身份验证的概念，用户必须重新进行身份验证才能访问特定服务。 CAS协议通过renew参数支持强制认证。强制身份验证为SSO会话的主体身份提供了额外的保证，因为用户必须在访问之前验证其凭据。强制认证适用于需要或强制要求更高安全性的服务。通常，强制身份验证是基于每个服务配置的，但是服务管理工具通过集中安全策略为实施强制身份验证提供了一些支持。强制认证可以与多因素认证特征组合以实现任意特定于服务的访问控制策略。</p>\n<h4 id=\"被动认证\"><a href=\"#被动认证\" class=\"headerlink\" title=\"被动认证\"></a>被动认证</h4><p>某些CAS协议支持被动身份验证，其中在请求时匿名授予对受CAS保护的服务的访问权限。 CASv2和CASv3协议通过网关功能支持此功能。被动认证补充了强制认证;强制身份验证需要身份验证才能访问服务，被动身份验证允许服务访问，尽管是匿名的，无需身份验证。</p>\n<h4 id=\"代理验证\"><a href=\"#代理验证\" class=\"headerlink\" title=\"代理验证\"></a>代理验证</h4><p>代理身份验证或委派身份验证提供了CAS的强大，重要且可能具有安全性的功能。 CASv2和CASv3协议支持代理身份验证，并由代表用户的服务请求的代理票证调解;因此，服务代理用户的认证。代理身份验证通常用于服务无法直接与用户交互的情况，也可用作将最终用户凭据重放到服务的替代方法。</p>\n<p>然而，代理票据存在风险，因为接受代理票据的服务负责验证代理链（最终用户的认证已经被委托到达票证验证服务的服务列表）。通过简单地针对/ serviceValidate验证端点验证票证，服务可以完全选择不接受代理票证（并避免验证代理链的责任），但是经验表明很容易对此进行混淆并配置为无意中使用/ proxyValidate端点不仔细检查故障单验证响应中出现的任何代理链。因此，代理身份验证需要仔细配置以进行适当的安如果不需要代理身份验证，建议在CAS服务器上禁用代理身份验证组件。</p>\n<p>过去，任何服务都可以获取代理授予票证，并从中获取代理票证以访问任何其他服务。换句话说，安全模型是分散的而不是集中的。服务管理设施通过暴露可以基于每个服务启用或禁用的代理验证标志来提供对代理验证的一些集中控制。默认情况下，注册服务未授予代理身份验证功能。</p>\n<h4 id=\"多因素身份验证\"><a href=\"#多因素身份验证\" class=\"headerlink\" title=\"多因素身份验证\"></a>多因素身份验证</h4><p>CAS以两种模式之一提供对多因素身份验证的支持：全局和单服务。登录表单上总是需要多个凭证的全局情况很简单：修改用户界面以接受多个凭证，并将身份验证组件配置为要求成功验证所有提供的凭据。</p>\n<p>单服务案例更有趣，更复杂：</p>\n<ul>\n<li>必须建立凭证和凭证组的身份保证级别（LOA）。</li>\n<li>必须根据服务建立安全策略与凭证LOA。</li>\n<li>必须通过服务管理工具配置服务访问策略。</li>\n</ul>\n<p>前两项任务至关重要，但超出了本文档的范围。通过服务管理工具应用服务访问策略是通过声明必须成功验证凭证以允许访问的验证处理程序来实现的;例如，LDAP身份验证处理程序和RSA SecureID身份验证处理程序。</p>\n<p>由于多因素身份验证需要开发机构安全策略，高级组件配置（以及可能的自定义组件开发）和UI设计，因此应将其视为框架而非功能。有关配置问题和实施建议的详细讨论，请参阅多因素配置部分。</p>\n<h4 id=\"凭据缓存和恢复\"><a href=\"#凭据缓存和恢复\" class=\"headerlink\" title=\"凭据缓存和恢复\"></a>凭据缓存和恢复</h4><p>ClearPass扩展提供了一种机制，用于捕获主要身份验证凭据，对其进行缓存（加密），并根据需要恢复以访问旧服务。虽然建议使用代理身份验证代替密码重放，但可能需要将旧服务与CAS集成。有关详细信息，请参阅ClearPass文档。</p>\n<h4 id=\"安全响应标头\"><a href=\"#安全响应标头\" class=\"headerlink\" title=\"安全响应标头\"></a>安全响应标头</h4><p>作为CAS安全筛选器的一部分，CAS项目自动提供必要的配置，以将HTTP安全标头插入Web响应中，以防止HSTS，XSS，X-FRAME和其他攻击。默认情况下，这些设置目前处于关闭状态，可通过以下设置启用：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># httpresponse.header.cache=false</span></span><br><span class=\"line\"><span class=\"comment\"># httpresponse.header.hsts=false</span></span><br><span class=\"line\"><span class=\"comment\"># httpresponse.header.xframe=false</span></span><br><span class=\"line\"><span class=\"comment\"># httpresponse.header.xcontent=false</span></span><br><span class=\"line\"><span class=\"comment\"># httpresponse.header.xss=false</span></span><br></pre></td></tr></table></figure>\n<p>要查看并了解有关这些选项的更多信息，请访问此<a href=\"https://github.com/apereo/cas-server-security-filter\" target=\"_blank\" rel=\"noopener\">指南</a>。</p>\n<h2 id=\"高可用性指南-HA-群集\"><a href=\"#高可用性指南-HA-群集\" class=\"headerlink\" title=\"高可用性指南(HA /群集)\"></a>高可用性指南(HA /群集)</h2><p>高度可用的CAS部署是为了响应各种故障模式而提供弹性的部署，以便尽管出现故障，CAS仍继续提供SSO服务。我们提供推荐的体系结构，为规划和执行符合机构性能和可用性要求的CAS部署提供了一个起点。它还提供了一个框架，用于理解由HA考虑因素强加的CAS软件组件要求。</p>\n<p>通过确保有足够的冗余来实现CAS的高可用性（HA）配置，以便在面对组件故障时服务是稳健的，并且可以在没有服务停机的情况下完成日常维护。这可以通过多节点实现，在较小程度上可以通过具有高级虚拟机功能的单节点CAS实现。本文档将重点介绍实现HA所需的CAS Server组件。对HA配置的更加定量的分析取决于支持基础设施和服务，超出了本文档的范围。</p>\n<p>CAS服务器软件具有非常可靠的良好记录。但是，CAS服务器只是软件和硬件的一小部分，认证必须遍历才能顺利运行。集群通常使用集群，不仅用于负载处理，还用于故障转移。即使没有发生故障，有时也需要重新启动服务器。例如，如果安装了操作系统级别的严重安全修复程序，则应立即重新启动服务器。在CAS服务器集群中，即使在最繁忙的时间，也可以通过滚动重启轻松完成。</p>\n<p>传统上操作单个服务器会延迟重启，直到较不繁忙的时间，同时运行已知漏洞。然而，最近随着虚拟机技术的日益接受及其固有的冗余和容错性，单节点CAS已经能够实现类似的质量。</p>\n<h3 id=\"推荐架构\"><a href=\"#推荐架构\" class=\"headerlink\" title=\"推荐架构\"></a>推荐架构</h3><p>下图突出显示了高可用CAS部署的重要方面。</p>\n<p><a href=\"https://apereo.github.io/cas/4.2.x/images/recommended_ha_architecture.png\" target=\"_blank\" rel=\"noopener\">CAS集群架构</a></p>\n<p>值得指出这种架构的一些重要特征：</p>\n<ul>\n<li>从属系统可以容忍多达N-1个节点故障。 （其中N是节点总数。）</li>\n<li>CAS本身可以容忍多达N-1个节点故障。</li>\n<li>丢失缓存节点不会导致复制缓存中的SSO状态数据（即票据）丢失。</li>\n<li>丢失缓存节点可能导致非复制缓存中的SSO状态数据丢失（例如，memcached）。</li>\n<li>SSO状态数据的丢失始终是优雅的：用户只需重新进行身份验证。</li>\n</ul>\n<p>在详细讨论推荐架构的各个方面之前，我们提供了规划高可用性部署的指导原则：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">追求简单</span><br><span class=\"line\">设计满足性能和可用性要求的最简单解决方案。</span><br></pre></td></tr></table></figure>\n<p>经验表明，简单性是成功和强大的HA部署的重要系统特征。力求简洁，您将获得良好的服务。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>企业单点登录 - CAS提供友好的开源社区，积极支持并为项目做出贡献。虽然该项目植根于高级开放源代码，但它已发展成为跨越财富500强企业和小型专用设备的国际受众。  </p>\n<p>CAS为Web提供企业单点登录服务：</p>\n<ul>\n<li>开放且文档齐全的协议开源</li>\n<li>Java服务器组件</li>\n<li>可插入的身份验证支持（LDAP，数据库，X.509,2-factor）</li>\n<li>支持多种协议（CAS，SAML） ，OAuth，OpenID）Java，.Net，PHP，Perl，Apache，uPortal和其他</li>\n<li>客户端库集成了uPortal，BlueSocket，TikiWiki，Mule，Liferay，Moodle等</li>\n<li>社区文档和实现支持广泛的采用者社区</li>\n</ul>\n<h2 id=\"资源链接\"><a href=\"#资源链接\" class=\"headerlink\" title=\"资源链接\"></a>资源链接</h2><ul>\n<li><a href=\"https://www.apereo.org/projects/cas\" target=\"_blank\" rel=\"noopener\">官方网站</a></li>\n<li><a href=\"https://apereo.github.io/cas/4.2.x/index.html\" target=\"_blank\" rel=\"noopener\">官方文档</a></li>\n<li><a href=\"https://github.com/apereo/cas\" target=\"_blank\" rel=\"noopener\">GitHub</a></li>\n</ul>\n<h2 id=\"架构\"><a href=\"#架构\" class=\"headerlink\" title=\"架构\"></a>架构</h2><p><img src=\"https://apereo.github.io/cas/4.2.x/images/cas_architecture.png\" alt=\"cas架构图\"></p>\n<h3 id=\"CAS服务器\"><a href=\"#CAS服务器\" class=\"headerlink\" title=\"CAS服务器\"></a>CAS服务器</h3><p>CAS服务器是基于Spring Framework构建的Java servlet，其主要职责是通过颁发和验证票证来对用户进行身份验证并授予对启用CAS的服务（通常称为CAS客户端）的访问权限。当服务器在成功登录后向用户发出票证授予票证（TGT）时，将创建SSO会话。使用TGT作为令牌，通过浏览器重定向，根据用户的请求向服务发出服务票据（ST）。随后通过反向信道通信在CAS服务器上验证ST。</p>\n<h3 id=\"CAS客户端\"><a href=\"#CAS客户端\" class=\"headerlink\" title=\"CAS客户端\"></a>CAS客户端</h3><p>术语“CAS客户端”在其通用使用中具有两个不同的含义。 CAS客户端是任何启用CAS的应用程序，可以通过支持的协议与服务器通信。 CAS客户端也是可以与各种软件平台和应用程序集成的软件包，以便通过某种认证协议（例如CAS，SAML，OAuth）与CAS服务器通信。已经开发了支持许多软件平台和产品的CAS客户。</p>\n<p>平台：</p>\n<ul>\n<li>Apache httpd Server (<a href=\"https://github.com/Jasig/mod_auth_cas\" target=\"_blank\" rel=\"noopener\">mod_auth_cas module</a>)</li>\n<li>Java (<a href=\"https://github.com/apereo/java-cas-client\" target=\"_blank\" rel=\"noopener\">Java CAS Client</a>)</li>\n<li>.NET (<a href=\"https://github.com/apereo/dotnet-cas-client\" target=\"_blank\" rel=\"noopener\">.NET CAS Client</a>)</li>\n<li>PHP (phpCAS)</li>\n<li>Perl (PerlCAS)</li>\n<li>Python (pycas)</li>\n<li>Ruby (rubycas-client)</li>\n</ul>\n<p>应用：</p>\n<ul>\n<li>Outlook Web Application (ClearPass + .NET CAS Client)</li>\n<li>Atlassian Confluence</li>\n<li>Atlassian JIRA</li>\n<li>Drupal</li>\n<li>Liferay</li>\n<li>uPortal</li>\n</ul>\n<h3 id=\"协议\"><a href=\"#协议\" class=\"headerlink\" title=\"协议\"></a>协议</h3><p>客户端通过几种支持的协议与服务器通信。所有支持的协议在概念上都是相似的，但有些协议具有使其适用于特定应用程序或用例的特征或特征。例如，CAS协议支持委托（代理）身份验证，SAML协议支持属性释放和单点注销。</p>\n<p>支持的协议：</p>\n<ul>\n<li><a href=\"https://apereo.github.io/cas/4.2.x/protocol/CAS-Protocol.htmlv\" target=\"_blank\" rel=\"noopener\">CAS (versions 1, 2, and 3)</a></li>\n<li><a href=\"https://apereo.github.io/cas/4.2.x/protocol/SAML-Protocol.html\" target=\"_blank\" rel=\"noopener\">SAML 1.1</a></li>\n<li><a href=\"https://apereo.github.io/cas/4.2.x/protocol/OpenID-Protocol.html\" target=\"_blank\" rel=\"noopener\">OpenID</a></li>\n<li><a href=\"https://apereo.github.io/cas/4.2.x/protocol/OAuth-Protocol.html\" target=\"_blank\" rel=\"noopener\">OAuth (1.0, 2.0)</a></li>\n</ul>\n<h3 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h3><p>根据三层子系统描述CAS服务器是很有帮助的：</p>\n<ul>\n<li>Web (Spring MVC/Spring Webflow)</li>\n<li><a href=\"https://apereo.github.io/cas/4.2.x/installation/Configuring-Ticketing-Components.html\" target=\"_blank\" rel=\"noopener\">Ticketing</a></li>\n<li><a href=\"https://apereo.github.io/cas/4.2.x/installation/Configuring-Authentication-Components.html\" target=\"_blank\" rel=\"noopener\">Authentication</a></li>\n</ul>\n<p>几乎所有部署注意事项和组件配置都涉及这三个子系统。 Web层是与包括CAS客户端在内的所有外部系统进行通信的端点。 Web层委托票务子系统生成CAS客户端访问的票证。 SSO会话开始于成功验证时发出票证授予票证，因此票务子系统经常委托给验证子系统。</p>\n<p>认证系统通常仅在SSO会话开始时处理请求，尽管存在可以调用它的其他情况（例如，强制认证）。</p>\n<h3 id=\"Spring-框架\"><a href=\"#Spring-框架\" class=\"headerlink\" title=\"Spring 框架\"></a>Spring 框架</h3><p>CAS使用Spring Framework的许多方面;最值得注意的是，Spring MVC和Spring Webflow。 Spring为核心CAS代码库以及部署者提供了完整且可扩展的框架;通过挂钩CAS和Spring API扩展点，可以直接定制或扩展CAS行为。 Spring的一般知识有助于理解某些框架组件之间的相互作用，但并不是严格要求的。但是，用于配置CAS和Spring组件的基于XML的配置是安装，定制和扩展的核心问题。通常使用XML的能力和特别是Spring IOC容器是CAS安装的先决条件。</p>\n<h2 id=\"安装要求\"><a href=\"#安装要求\" class=\"headerlink\" title=\"安装要求\"></a>安装要求</h2><p>要求概览：</p>\n<ol>\n<li><a href=\"http://www.java.com/\" target=\"_blank\" rel=\"noopener\">Java</a> &gt;=1.7</li>\n<li><a href=\"http://tomcat.apache.org/\" target=\"_blank\" rel=\"noopener\">支持servlet规范的Servlet容器</a> &gt;=3.0</li>\n<li><a href=\"http://maven.apache.org/\" target=\"_blank\" rel=\"noopener\">Apache Maven</a> &gt;=3.3</li>\n<li><a href=\"http://www.springsource.org/\" target=\"_blank\" rel=\"noopener\">熟悉Spring框架</a></li>\n<li>互联网连接</li>\n</ol>\n<p>根据配置组件的选择，可能还有其他要求，例如LDAP目录，数据库和缓存基础结构。但是，在大多数情况下，对于选择具有明确硬件和软件依赖性的组件的部署者来说，要求应该是不言而喻的。在任何其他要求不明显的情况下，组件配置的讨论应该提到系统，软件，硬件和其他要求。</p>\n<h3 id=\"Servlet容器\"><a href=\"#Servlet容器\" class=\"headerlink\" title=\"Servlet容器\"></a>Servlet容器</h3><p>CAS没有官方支持的servlet容器，但<a href=\"http://tomcat.apache.org/\" target=\"_blank\" rel=\"noopener\">Apache Tomcat</a>是最常用的。对特定servlet容器的支持取决于社区成员的专业知识，但已知以下工作正常并且应该获得<a href=\"https://apereo.github.io/cas/4.2.x/Mailing-Lists.html\" target=\"_blank\" rel=\"noopener\">社区讨论邮件列表</a>的优先支持：</p>\n<ul>\n<li><a href=\"http://www.jboss.org/\" target=\"_blank\" rel=\"noopener\">JBoss</a></li>\n<li><a href=\"http://www.eclipse.org/jetty/\" target=\"_blank\" rel=\"noopener\">Jetty</a></li>\n<li><a href=\"http://glassfish.java.net/\" target=\"_blank\" rel=\"noopener\">GlassFish</a></li>\n<li><a href=\"http://www.ibm.com/software/websphere/\" target=\"_blank\" rel=\"noopener\">WebSphere</a></li>\n</ul>\n<h3 id=\"Apache-Maven\"><a href=\"#Apache-Maven\" class=\"headerlink\" title=\"Apache Maven\"></a>Apache Maven</h3><p>CAS使用Maven构建和创建可部署的软件包，以便安装到Java servlet容器中。强烈建议使用Maven进行CAS安装过程所需的配置管理。 CAS基本上是一个复杂的软件产品，它嵌入并紧密集成到机构的软件环境中。因此，它倾向于要求定制远远超出交钥匙解决方案，并且集成要求往往会随着时间的推移而变化。像<a href=\"https://apereo.github.io/cas/4.2.x/installation/Maven-Overlay-Installation.html\" target=\"_blank\" rel=\"noopener\">Maven WAR overlay</a>这样的基于源的安装过程为复杂和动态的需求提供了直接而灵活的解决方案。虽然它确实需要高昂的前期学习成本，但从长远来看，它可以获得许多好处</p>\n<h3 id=\"互联网连接\"><a href=\"#互联网连接\" class=\"headerlink\" title=\"互联网连接\"></a>互联网连接</h3><p>任何基于Maven的项目的构建阶段通常都需要Internet连接，包括用于安装CAS的推荐Maven WAR覆盖。 Maven通过搜索包含本地下载和安装的工件（大多数情况下为jar文件）的在线存储库来解析依赖关系。虽然可以通过替换Maven配置设置来覆盖此行为，但它被视为高级用法，不受支持。</p>\n<p>克服CAS服务器上缺少Internet连接的常见解决方案是在具有Internet连接的专用构建主机上构建CAS。随后将构建生成的cas.war文件复制到CAS服务器以进行部署。</p>\n<h2 id=\"安全指南\"><a href=\"#安全指南\" class=\"headerlink\" title=\"安全指南\"></a>安全指南</h2><p>CAS是一种安全软件，可为基于Web的应用程序提供基于Web的安全单点登录。单点登录在安全性和便利性方面提供了双赢：它减少了对单个受信任凭证代理的密码暴露，同时透明地提供对多个服务的访问而无需重复登录。 CAS的使用通常会改善安全环境，但是应该考虑几种CAS配置，策略和部署问题以实现适当的安全性。</p>\n<h3 id=\"系统安全注意事项\"><a href=\"#系统安全注意事项\" class=\"headerlink\" title=\"系统安全注意事项\"></a>系统安全注意事项</h3><h4 id=\"安全传输（https）\"><a href=\"#安全传输（https）\" class=\"headerlink\" title=\"安全传输（https）\"></a>安全传输（https）</h4><p>与CAS服务器的所有通信必须通过安全信道（即TLSv1）进行。此要求有两个主要理由：</p>\n<ol>\n<li>身份验证过程需要传输安全凭据。</li>\n<li>CAS票证授予票证是不记名令牌。</li>\n</ol>\n<p>由于任一数据的公开都会允许冒充攻击，因此保护CAS客户端和CAS服务器之间的通信通道至关重要。</p>\n<p>实际上，这意味着所有CAS URL必须使用HTTPS，但这也意味着必须使用HTTPS完成从CAS服务器到应用程序的所有连接：</p>\n<ol>\n<li>当生成的服务票据被发送回“服务”URL上的应用程序时。</li>\n<li>当调用代理回调网址时。</li>\n</ol>\n<h4 id=\"与依赖系统的连接\"><a href=\"#与依赖系统的连接\" class=\"headerlink\" title=\"与依赖系统的连接\"></a>与依赖系统的连接</h4><p>CAS通常需要连接到其他系统，例如LDAP目录，数据库和缓存服务。我们通常建议在可能的情况下对这些系统使用安全传输（SSL / TLS，IPSec），但可能存在补偿性控制，这使得安全传输成为必要。具有严格访问控制的专用网络和企业网络是常见的例外情况，但仍建议使用安全传输。客户端认证验证可以是LDAP提供足够安全性的另一个好方案。</p>\n<p>如前所述，必须确保与其他系统的连接。但是，如果CAS服务器部署在多个节点上，则同样适用于CAS服务器本身。如果基于缓存的故障单注册表在单个CAS服务器上运行时没有任何安全问题，则在网络未受保护时使用多个节点时，同步可能会成为安全问题。</p>\n<p>如果没有正确保护，任何磁盘存储也都容易受到攻可以关闭EhCache溢出到磁盘以增加保护，而高级加密数据机制应该用于数据库磁盘存储。</p>\n<h3 id=\"部署驱动的安全功能\"><a href=\"#部署驱动的安全功能\" class=\"headerlink\" title=\"部署驱动的安全功能\"></a>部署驱动的安全功能</h3><p>CAS支持许多可用于实现各种安全策略的功能。通过CAS配置和CAS客户端集成提供以下功能。请注意，许多功能都是开箱即用的，而其他功能则需要显式设置。</p>\n<h4 id=\"强制认证\"><a href=\"#强制认证\" class=\"headerlink\" title=\"强制认证\"></a>强制认证</h4><p>许多CAS客户端和支持的协议支持强制身份验证的概念，用户必须重新进行身份验证才能访问特定服务。 CAS协议通过renew参数支持强制认证。强制身份验证为SSO会话的主体身份提供了额外的保证，因为用户必须在访问之前验证其凭据。强制认证适用于需要或强制要求更高安全性的服务。通常，强制身份验证是基于每个服务配置的，但是服务管理工具通过集中安全策略为实施强制身份验证提供了一些支持。强制认证可以与多因素认证特征组合以实现任意特定于服务的访问控制策略。</p>\n<h4 id=\"被动认证\"><a href=\"#被动认证\" class=\"headerlink\" title=\"被动认证\"></a>被动认证</h4><p>某些CAS协议支持被动身份验证，其中在请求时匿名授予对受CAS保护的服务的访问权限。 CASv2和CASv3协议通过网关功能支持此功能。被动认证补充了强制认证;强制身份验证需要身份验证才能访问服务，被动身份验证允许服务访问，尽管是匿名的，无需身份验证。</p>\n<h4 id=\"代理验证\"><a href=\"#代理验证\" class=\"headerlink\" title=\"代理验证\"></a>代理验证</h4><p>代理身份验证或委派身份验证提供了CAS的强大，重要且可能具有安全性的功能。 CASv2和CASv3协议支持代理身份验证，并由代表用户的服务请求的代理票证调解;因此，服务代理用户的认证。代理身份验证通常用于服务无法直接与用户交互的情况，也可用作将最终用户凭据重放到服务的替代方法。</p>\n<p>然而，代理票据存在风险，因为接受代理票据的服务负责验证代理链（最终用户的认证已经被委托到达票证验证服务的服务列表）。通过简单地针对/ serviceValidate验证端点验证票证，服务可以完全选择不接受代理票证（并避免验证代理链的责任），但是经验表明很容易对此进行混淆并配置为无意中使用/ proxyValidate端点不仔细检查故障单验证响应中出现的任何代理链。因此，代理身份验证需要仔细配置以进行适当的安如果不需要代理身份验证，建议在CAS服务器上禁用代理身份验证组件。</p>\n<p>过去，任何服务都可以获取代理授予票证，并从中获取代理票证以访问任何其他服务。换句话说，安全模型是分散的而不是集中的。服务管理设施通过暴露可以基于每个服务启用或禁用的代理验证标志来提供对代理验证的一些集中控制。默认情况下，注册服务未授予代理身份验证功能。</p>\n<h4 id=\"多因素身份验证\"><a href=\"#多因素身份验证\" class=\"headerlink\" title=\"多因素身份验证\"></a>多因素身份验证</h4><p>CAS以两种模式之一提供对多因素身份验证的支持：全局和单服务。登录表单上总是需要多个凭证的全局情况很简单：修改用户界面以接受多个凭证，并将身份验证组件配置为要求成功验证所有提供的凭据。</p>\n<p>单服务案例更有趣，更复杂：</p>\n<ul>\n<li>必须建立凭证和凭证组的身份保证级别（LOA）。</li>\n<li>必须根据服务建立安全策略与凭证LOA。</li>\n<li>必须通过服务管理工具配置服务访问策略。</li>\n</ul>\n<p>前两项任务至关重要，但超出了本文档的范围。通过服务管理工具应用服务访问策略是通过声明必须成功验证凭证以允许访问的验证处理程序来实现的;例如，LDAP身份验证处理程序和RSA SecureID身份验证处理程序。</p>\n<p>由于多因素身份验证需要开发机构安全策略，高级组件配置（以及可能的自定义组件开发）和UI设计，因此应将其视为框架而非功能。有关配置问题和实施建议的详细讨论，请参阅多因素配置部分。</p>\n<h4 id=\"凭据缓存和恢复\"><a href=\"#凭据缓存和恢复\" class=\"headerlink\" title=\"凭据缓存和恢复\"></a>凭据缓存和恢复</h4><p>ClearPass扩展提供了一种机制，用于捕获主要身份验证凭据，对其进行缓存（加密），并根据需要恢复以访问旧服务。虽然建议使用代理身份验证代替密码重放，但可能需要将旧服务与CAS集成。有关详细信息，请参阅ClearPass文档。</p>\n<h4 id=\"安全响应标头\"><a href=\"#安全响应标头\" class=\"headerlink\" title=\"安全响应标头\"></a>安全响应标头</h4><p>作为CAS安全筛选器的一部分，CAS项目自动提供必要的配置，以将HTTP安全标头插入Web响应中，以防止HSTS，XSS，X-FRAME和其他攻击。默认情况下，这些设置目前处于关闭状态，可通过以下设置启用：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># httpresponse.header.cache=false</span></span><br><span class=\"line\"><span class=\"comment\"># httpresponse.header.hsts=false</span></span><br><span class=\"line\"><span class=\"comment\"># httpresponse.header.xframe=false</span></span><br><span class=\"line\"><span class=\"comment\"># httpresponse.header.xcontent=false</span></span><br><span class=\"line\"><span class=\"comment\"># httpresponse.header.xss=false</span></span><br></pre></td></tr></table></figure>\n<p>要查看并了解有关这些选项的更多信息，请访问此<a href=\"https://github.com/apereo/cas-server-security-filter\" target=\"_blank\" rel=\"noopener\">指南</a>。</p>\n<h2 id=\"高可用性指南-HA-群集\"><a href=\"#高可用性指南-HA-群集\" class=\"headerlink\" title=\"高可用性指南(HA /群集)\"></a>高可用性指南(HA /群集)</h2><p>高度可用的CAS部署是为了响应各种故障模式而提供弹性的部署，以便尽管出现故障，CAS仍继续提供SSO服务。我们提供推荐的体系结构，为规划和执行符合机构性能和可用性要求的CAS部署提供了一个起点。它还提供了一个框架，用于理解由HA考虑因素强加的CAS软件组件要求。</p>\n<p>通过确保有足够的冗余来实现CAS的高可用性（HA）配置，以便在面对组件故障时服务是稳健的，并且可以在没有服务停机的情况下完成日常维护。这可以通过多节点实现，在较小程度上可以通过具有高级虚拟机功能的单节点CAS实现。本文档将重点介绍实现HA所需的CAS Server组件。对HA配置的更加定量的分析取决于支持基础设施和服务，超出了本文档的范围。</p>\n<p>CAS服务器软件具有非常可靠的良好记录。但是，CAS服务器只是软件和硬件的一小部分，认证必须遍历才能顺利运行。集群通常使用集群，不仅用于负载处理，还用于故障转移。即使没有发生故障，有时也需要重新启动服务器。例如，如果安装了操作系统级别的严重安全修复程序，则应立即重新启动服务器。在CAS服务器集群中，即使在最繁忙的时间，也可以通过滚动重启轻松完成。</p>\n<p>传统上操作单个服务器会延迟重启，直到较不繁忙的时间，同时运行已知漏洞。然而，最近随着虚拟机技术的日益接受及其固有的冗余和容错性，单节点CAS已经能够实现类似的质量。</p>\n<h3 id=\"推荐架构\"><a href=\"#推荐架构\" class=\"headerlink\" title=\"推荐架构\"></a>推荐架构</h3><p>下图突出显示了高可用CAS部署的重要方面。</p>\n<p><a href=\"https://apereo.github.io/cas/4.2.x/images/recommended_ha_architecture.png\" target=\"_blank\" rel=\"noopener\">CAS集群架构</a></p>\n<p>值得指出这种架构的一些重要特征：</p>\n<ul>\n<li>从属系统可以容忍多达N-1个节点故障。 （其中N是节点总数。）</li>\n<li>CAS本身可以容忍多达N-1个节点故障。</li>\n<li>丢失缓存节点不会导致复制缓存中的SSO状态数据（即票据）丢失。</li>\n<li>丢失缓存节点可能导致非复制缓存中的SSO状态数据丢失（例如，memcached）。</li>\n<li>SSO状态数据的丢失始终是优雅的：用户只需重新进行身份验证。</li>\n</ul>\n<p>在详细讨论推荐架构的各个方面之前，我们提供了规划高可用性部署的指导原则：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">追求简单</span><br><span class=\"line\">设计满足性能和可用性要求的最简单解决方案。</span><br></pre></td></tr></table></figure>\n<p>经验表明，简单性是成功和强大的HA部署的重要系统特征。力求简洁，您将获得良好的服务。</p>\n"},{"title":"博客技术迁移公告","author":"chenqy9","date":"2019-01-30T16:12:00.000Z","_content":"# 2019年01月30日，博客由Jekyll迁移到Hexo","source":"_posts/博客技术迁移公告.md","raw":"title: 博客技术迁移公告\nauthor: chenqy9\ntags: []\ncategories: []\ndate: 2019-01-31 00:12:00\n---\n# 2019年01月30日，博客由Jekyll迁移到Hexo","slug":"博客技术迁移公告","published":1,"updated":"2019-01-30T16:16:24.726Z","_id":"cjvyv4458000yhwazrrh78ns5","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"2019年01月30日，博客由Jekyll迁移到Hexo\"><a href=\"#2019年01月30日，博客由Jekyll迁移到Hexo\" class=\"headerlink\" title=\"2019年01月30日，博客由Jekyll迁移到Hexo\"></a>2019年01月30日，博客由Jekyll迁移到Hexo</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"2019年01月30日，博客由Jekyll迁移到Hexo\"><a href=\"#2019年01月30日，博客由Jekyll迁移到Hexo\" class=\"headerlink\" title=\"2019年01月30日，博客由Jekyll迁移到Hexo\"></a>2019年01月30日，博客由Jekyll迁移到Hexo</h1>"},{"title":"在Linux上安装MongoDB社区版","layout":"single","author_profile":true,"read_time":false,"comments":1,"related":true,"classes":"wide","date":"2019-02-15T06:11:00.000Z","_content":"\n## 在Red Hat Enterprise或CentOS Linux上安装MongoDB 社区版\n\n本教程使用.rpm软件包在Red Hat Enterprise Linux或CentOS Linux版本6和7上安装MongoDB Community Edition。\n\n### 使用.rpm包（推荐）\n\n1. 配置包管理系统（yum）\n\n  创建一个/etc/yum.repos.d/mongodb-org-4.0.repo文件，以便您可以使用yum直接安装MongoDB：\n\n  ``` bash\n  [mongodb-org-4.0]\n  name=MongoDB Repository\n  baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.0/x86_64/\n  gpgcheck=1\n  enabled=1\n  gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc\n  ```\n\n2. 安装MongoDB包\n\n  要安装最新的稳定版MongoDB，请发出以下命令：\n\n  ``` bash\n  sudo yum install -y mongodb-org\n  ```\n  \n### 运行MongoDB社区版\n\n1. 启动MongoDB\n\n  您可以通过发出以下命令来启动mongod进程：\n\n  ``` bash\n  sudo service mongod start\n  ```\n    \n2. 验证MongoDB是否已成功启动\n\n  您可以通过检查/var/log/mongodb/mongod.log中日志文件的内容来检查mongod进程是否已成功启动以获取行读取\n  \n  ``` bash\n  [initandlisten] waiting for connections on port <port>\n  ```\n  \n  其中<port>是/etc/mongod.conf中配置的端口，默认为27017。\n  \n  您可以选择通过发出以下命令来确保MongoDB在系统重新启动后启动：\n  \n  ``` bash\n  sudo chkconfig mongod on\n  ```\n\n3. 停止MongoDB\n\n  根据需要，您可以通过发出以下命令来停止mongod进程：\n  \n  ``` bash\n  sudo service mongod stop\n  ```\n  \n4. 重启MongoDB\n\n  您可以通过发出以下命令重新启动mongod进程：\n  \n  ``` bash\n  sudo service mongod restart\n  ```\n  \n  您可以通过观察/var/log/mongodb/mongod.log文件中的输出来跟踪错误或重要消息的进程状态。\n  \n5. 开始使用MongoDB\n\n  在与mongod相同的主机上启动mongo shell。您可以在没有任何命令行选项的情况下运行mongo shell，以使用默认端口27017连接到localhost上运行的mongod：\n  \n  ``` bash\n  mongo\n  ```","source":"_posts/在Linux上安装MongoDB社区版.md","raw":"---\ntitle: 在Linux上安装MongoDB社区版\nlayout: single\nauthor_profile: true\nread_time: false\ncomments: null\nrelated: true\nclasses: wide\ncategories:\n- 文章教程\ntags:\n  - linux\n  - MongoDB\ndate: 2019-02-15 14:11:00\n---\n\n## 在Red Hat Enterprise或CentOS Linux上安装MongoDB 社区版\n\n本教程使用.rpm软件包在Red Hat Enterprise Linux或CentOS Linux版本6和7上安装MongoDB Community Edition。\n\n### 使用.rpm包（推荐）\n\n1. 配置包管理系统（yum）\n\n  创建一个/etc/yum.repos.d/mongodb-org-4.0.repo文件，以便您可以使用yum直接安装MongoDB：\n\n  ``` bash\n  [mongodb-org-4.0]\n  name=MongoDB Repository\n  baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.0/x86_64/\n  gpgcheck=1\n  enabled=1\n  gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc\n  ```\n\n2. 安装MongoDB包\n\n  要安装最新的稳定版MongoDB，请发出以下命令：\n\n  ``` bash\n  sudo yum install -y mongodb-org\n  ```\n  \n### 运行MongoDB社区版\n\n1. 启动MongoDB\n\n  您可以通过发出以下命令来启动mongod进程：\n\n  ``` bash\n  sudo service mongod start\n  ```\n    \n2. 验证MongoDB是否已成功启动\n\n  您可以通过检查/var/log/mongodb/mongod.log中日志文件的内容来检查mongod进程是否已成功启动以获取行读取\n  \n  ``` bash\n  [initandlisten] waiting for connections on port <port>\n  ```\n  \n  其中<port>是/etc/mongod.conf中配置的端口，默认为27017。\n  \n  您可以选择通过发出以下命令来确保MongoDB在系统重新启动后启动：\n  \n  ``` bash\n  sudo chkconfig mongod on\n  ```\n\n3. 停止MongoDB\n\n  根据需要，您可以通过发出以下命令来停止mongod进程：\n  \n  ``` bash\n  sudo service mongod stop\n  ```\n  \n4. 重启MongoDB\n\n  您可以通过发出以下命令重新启动mongod进程：\n  \n  ``` bash\n  sudo service mongod restart\n  ```\n  \n  您可以通过观察/var/log/mongodb/mongod.log文件中的输出来跟踪错误或重要消息的进程状态。\n  \n5. 开始使用MongoDB\n\n  在与mongod相同的主机上启动mongo shell。您可以在没有任何命令行选项的情况下运行mongo shell，以使用默认端口27017连接到localhost上运行的mongod：\n  \n  ``` bash\n  mongo\n  ```","slug":"在Linux上安装MongoDB社区版","published":1,"updated":"2019-05-22T05:59:01.590Z","_id":"cjvyv445c0016hwazmzwilpo9","photos":[],"link":"","content":"<h2 id=\"在Red-Hat-Enterprise或CentOS-Linux上安装MongoDB-社区版\"><a href=\"#在Red-Hat-Enterprise或CentOS-Linux上安装MongoDB-社区版\" class=\"headerlink\" title=\"在Red Hat Enterprise或CentOS Linux上安装MongoDB 社区版\"></a>在Red Hat Enterprise或CentOS Linux上安装MongoDB 社区版</h2><p>本教程使用.rpm软件包在Red Hat Enterprise Linux或CentOS Linux版本6和7上安装MongoDB Community Edition。</p>\n<h3 id=\"使用-rpm包（推荐）\"><a href=\"#使用-rpm包（推荐）\" class=\"headerlink\" title=\"使用.rpm包（推荐）\"></a>使用.rpm包（推荐）</h3><ol>\n<li><p>配置包管理系统（yum）</p>\n<p>创建一个/etc/yum.repos.d/mongodb-org-4.0.repo文件，以便您可以使用yum直接安装MongoDB：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mongodb-org-4.0]</span><br><span class=\"line\">name=MongoDB Repository</span><br><span class=\"line\">baseurl=https://repo.mongodb.org/yum/redhat/<span class=\"variable\">$releasever</span>/mongodb-org/4.0/x86_64/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装MongoDB包</p>\n<p>要安装最新的稳定版MongoDB，请发出以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y mongodb-org</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"运行MongoDB社区版\"><a href=\"#运行MongoDB社区版\" class=\"headerlink\" title=\"运行MongoDB社区版\"></a>运行MongoDB社区版</h3><ol>\n<li><p>启动MongoDB</p>\n<p>您可以通过发出以下命令来启动mongod进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mongod start</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>验证MongoDB是否已成功启动</p>\n<p>您可以通过检查/var/log/mongodb/mongod.log中日志文件的内容来检查mongod进程是否已成功启动以获取行读取</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[initandlisten] waiting <span class=\"keyword\">for</span> connections on port &lt;port&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>  其中<port>是/etc/mongod.conf中配置的端口，默认为27017。</port></p>\n<p>  您可以选择通过发出以下命令来确保MongoDB在系统重新启动后启动：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chkconfig mongod on</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><p>停止MongoDB</p>\n<p>根据需要，您可以通过发出以下命令来停止mongod进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mongod stop</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"4\">\n<li><p>重启MongoDB</p>\n<p>您可以通过发出以下命令重新启动mongod进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mongod restart</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>  您可以通过观察/var/log/mongodb/mongod.log文件中的输出来跟踪错误或重要消息的进程状态。</p>\n<ol start=\"5\">\n<li><p>开始使用MongoDB</p>\n<p>在与mongod相同的主机上启动mongo shell。您可以在没有任何命令行选项的情况下运行mongo shell，以使用默认端口27017连接到localhost上运行的mongod：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongo</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"在Red-Hat-Enterprise或CentOS-Linux上安装MongoDB-社区版\"><a href=\"#在Red-Hat-Enterprise或CentOS-Linux上安装MongoDB-社区版\" class=\"headerlink\" title=\"在Red Hat Enterprise或CentOS Linux上安装MongoDB 社区版\"></a>在Red Hat Enterprise或CentOS Linux上安装MongoDB 社区版</h2><p>本教程使用.rpm软件包在Red Hat Enterprise Linux或CentOS Linux版本6和7上安装MongoDB Community Edition。</p>\n<h3 id=\"使用-rpm包（推荐）\"><a href=\"#使用-rpm包（推荐）\" class=\"headerlink\" title=\"使用.rpm包（推荐）\"></a>使用.rpm包（推荐）</h3><ol>\n<li><p>配置包管理系统（yum）</p>\n<p>创建一个/etc/yum.repos.d/mongodb-org-4.0.repo文件，以便您可以使用yum直接安装MongoDB：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mongodb-org-4.0]</span><br><span class=\"line\">name=MongoDB Repository</span><br><span class=\"line\">baseurl=https://repo.mongodb.org/yum/redhat/<span class=\"variable\">$releasever</span>/mongodb-org/4.0/x86_64/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装MongoDB包</p>\n<p>要安装最新的稳定版MongoDB，请发出以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y mongodb-org</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"运行MongoDB社区版\"><a href=\"#运行MongoDB社区版\" class=\"headerlink\" title=\"运行MongoDB社区版\"></a>运行MongoDB社区版</h3><ol>\n<li><p>启动MongoDB</p>\n<p>您可以通过发出以下命令来启动mongod进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mongod start</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>验证MongoDB是否已成功启动</p>\n<p>您可以通过检查/var/log/mongodb/mongod.log中日志文件的内容来检查mongod进程是否已成功启动以获取行读取</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[initandlisten] waiting <span class=\"keyword\">for</span> connections on port &lt;port&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>  其中<port>是/etc/mongod.conf中配置的端口，默认为27017。</port></p>\n<p>  您可以选择通过发出以下命令来确保MongoDB在系统重新启动后启动：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chkconfig mongod on</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><p>停止MongoDB</p>\n<p>根据需要，您可以通过发出以下命令来停止mongod进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mongod stop</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"4\">\n<li><p>重启MongoDB</p>\n<p>您可以通过发出以下命令重新启动mongod进程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mongod restart</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>  您可以通过观察/var/log/mongodb/mongod.log文件中的输出来跟踪错误或重要消息的进程状态。</p>\n<ol start=\"5\">\n<li><p>开始使用MongoDB</p>\n<p>在与mongod相同的主机上启动mongo shell。您可以在没有任何命令行选项的情况下运行mongo shell，以使用默认端口27017连接到localhost上运行的mongod：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongo</span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"CAS安装","layout":"single","author_profile":true,"read_time":false,"related":true,"classes":"wide","date":"2019-01-30T16:06:33.000Z","comments":1,"_content":"\nCAS安装是一个基本的面向源的过程，我们建议使用[WAR overlay](http://maven.apache.org/plugins/maven-war-plugin/overlays.html)项目来组织自定义，例如组件配置和UI设计。 WAR覆盖构建的输出是一个cas.war文件，可以部署在像[Tomcat](http://tomcat.apache.org/whichversion.html)这样的Java servlet容器上。\n\nWAR overlay项目提供参考和研究。\n\n### Gradle\n\n* [CAS Gradle Overlay](https://github.com/apereo/cas-gradle-overlay-template/tree/4.2)\n\n### Maven\n\n* [CAS Maven Overlay](https://github.com/apereo/cas-overlay-template/tree/4.2)\n\nCAS使用Spring Webflow以模块化和可配置的方式驱动登录过程; login-webflow.xml文件包含流中状态和转换的简单描述。自定义此文件可能是Spring XML配置文件中除组件配置之外最常见的配置问题。有关各种CAS流程的详细说明以及常见配置点的讨论，请参见“Spring Webflow自定义指南”。\n\n### Spring 配置\n\nCAS服务器在很大程度上依赖于Spring框架。 spring-configuration目录下有精确和特定的XML配置文件，用于控制CAS的各种属性以及cas-servlet.xml和deployerConfigContext.xml，后者主要是CAS采用者希望将其包含在环境覆盖中 - 特定的CAS设置。\n\n如果需要通过Maven覆盖过程，可以覆盖XML配置文件中的Spring bean以更改行为。有两种方法：\n\n1. XML文件可以从CAS版本的源获得，并在Maven重叠版本中以相同的名称放置在相同的确切路径上。如果配置正确，则构建将使用本地提供的XML文件而不是默认值。\n\n2. CAS服务器能够加载XML配置文件的模式以覆盖默认提供的内容。打算否决CAS默认行为的这些配置文件可以放在/ WEB-INF /中，并且必须使用以下模式命名：cas-servlet - * .xml。放在此文件中的Bean将覆盖其他文件。","source":"_posts/2018-12-30-cas-install.md","raw":"title: CAS安装\nlayout: single\nauthor_profile: true\nread_time: false\nrelated: true\nclasses: wide\ncategories:\n  - 技术文档\ntags:\n  - CAS\n  - 单点登录\n  - 安装\ndate: 2019-01-31 00:06:33\ncomments:\n---\n\nCAS安装是一个基本的面向源的过程，我们建议使用[WAR overlay](http://maven.apache.org/plugins/maven-war-plugin/overlays.html)项目来组织自定义，例如组件配置和UI设计。 WAR覆盖构建的输出是一个cas.war文件，可以部署在像[Tomcat](http://tomcat.apache.org/whichversion.html)这样的Java servlet容器上。\n\nWAR overlay项目提供参考和研究。\n\n### Gradle\n\n* [CAS Gradle Overlay](https://github.com/apereo/cas-gradle-overlay-template/tree/4.2)\n\n### Maven\n\n* [CAS Maven Overlay](https://github.com/apereo/cas-overlay-template/tree/4.2)\n\nCAS使用Spring Webflow以模块化和可配置的方式驱动登录过程; login-webflow.xml文件包含流中状态和转换的简单描述。自定义此文件可能是Spring XML配置文件中除组件配置之外最常见的配置问题。有关各种CAS流程的详细说明以及常见配置点的讨论，请参见“Spring Webflow自定义指南”。\n\n### Spring 配置\n\nCAS服务器在很大程度上依赖于Spring框架。 spring-configuration目录下有精确和特定的XML配置文件，用于控制CAS的各种属性以及cas-servlet.xml和deployerConfigContext.xml，后者主要是CAS采用者希望将其包含在环境覆盖中 - 特定的CAS设置。\n\n如果需要通过Maven覆盖过程，可以覆盖XML配置文件中的Spring bean以更改行为。有两种方法：\n\n1. XML文件可以从CAS版本的源获得，并在Maven重叠版本中以相同的名称放置在相同的确切路径上。如果配置正确，则构建将使用本地提供的XML文件而不是默认值。\n\n2. CAS服务器能够加载XML配置文件的模式以覆盖默认提供的内容。打算否决CAS默认行为的这些配置文件可以放在/ WEB-INF /中，并且必须使用以下模式命名：cas-servlet - * .xml。放在此文件中的Bean将覆盖其他文件。","slug":"2018-12-30-cas-install","published":1,"updated":"2019-05-22T07:15:14.046Z","photos":[],"link":"","_id":"cjvywoj6n0001a2azlhvb786n","content":"<p>CAS安装是一个基本的面向源的过程，我们建议使用<a href=\"http://maven.apache.org/plugins/maven-war-plugin/overlays.html\" target=\"_blank\" rel=\"noopener\">WAR overlay</a>项目来组织自定义，例如组件配置和UI设计。 WAR覆盖构建的输出是一个cas.war文件，可以部署在像<a href=\"http://tomcat.apache.org/whichversion.html\" target=\"_blank\" rel=\"noopener\">Tomcat</a>这样的Java servlet容器上。</p>\n<p>WAR overlay项目提供参考和研究。</p>\n<h3 id=\"Gradle\"><a href=\"#Gradle\" class=\"headerlink\" title=\"Gradle\"></a>Gradle</h3><ul>\n<li><a href=\"https://github.com/apereo/cas-gradle-overlay-template/tree/4.2\" target=\"_blank\" rel=\"noopener\">CAS Gradle Overlay</a></li>\n</ul>\n<h3 id=\"Maven\"><a href=\"#Maven\" class=\"headerlink\" title=\"Maven\"></a>Maven</h3><ul>\n<li><a href=\"https://github.com/apereo/cas-overlay-template/tree/4.2\" target=\"_blank\" rel=\"noopener\">CAS Maven Overlay</a></li>\n</ul>\n<p>CAS使用Spring Webflow以模块化和可配置的方式驱动登录过程; login-webflow.xml文件包含流中状态和转换的简单描述。自定义此文件可能是Spring XML配置文件中除组件配置之外最常见的配置问题。有关各种CAS流程的详细说明以及常见配置点的讨论，请参见“Spring Webflow自定义指南”。</p>\n<h3 id=\"Spring-配置\"><a href=\"#Spring-配置\" class=\"headerlink\" title=\"Spring 配置\"></a>Spring 配置</h3><p>CAS服务器在很大程度上依赖于Spring框架。 spring-configuration目录下有精确和特定的XML配置文件，用于控制CAS的各种属性以及cas-servlet.xml和deployerConfigContext.xml，后者主要是CAS采用者希望将其包含在环境覆盖中 - 特定的CAS设置。</p>\n<p>如果需要通过Maven覆盖过程，可以覆盖XML配置文件中的Spring bean以更改行为。有两种方法：</p>\n<ol>\n<li><p>XML文件可以从CAS版本的源获得，并在Maven重叠版本中以相同的名称放置在相同的确切路径上。如果配置正确，则构建将使用本地提供的XML文件而不是默认值。</p>\n</li>\n<li><p>CAS服务器能够加载XML配置文件的模式以覆盖默认提供的内容。打算否决CAS默认行为的这些配置文件可以放在/ WEB-INF /中，并且必须使用以下模式命名：cas-servlet - * .xml。放在此文件中的Bean将覆盖其他文件。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>CAS安装是一个基本的面向源的过程，我们建议使用<a href=\"http://maven.apache.org/plugins/maven-war-plugin/overlays.html\" target=\"_blank\" rel=\"noopener\">WAR overlay</a>项目来组织自定义，例如组件配置和UI设计。 WAR覆盖构建的输出是一个cas.war文件，可以部署在像<a href=\"http://tomcat.apache.org/whichversion.html\" target=\"_blank\" rel=\"noopener\">Tomcat</a>这样的Java servlet容器上。</p>\n<p>WAR overlay项目提供参考和研究。</p>\n<h3 id=\"Gradle\"><a href=\"#Gradle\" class=\"headerlink\" title=\"Gradle\"></a>Gradle</h3><ul>\n<li><a href=\"https://github.com/apereo/cas-gradle-overlay-template/tree/4.2\" target=\"_blank\" rel=\"noopener\">CAS Gradle Overlay</a></li>\n</ul>\n<h3 id=\"Maven\"><a href=\"#Maven\" class=\"headerlink\" title=\"Maven\"></a>Maven</h3><ul>\n<li><a href=\"https://github.com/apereo/cas-overlay-template/tree/4.2\" target=\"_blank\" rel=\"noopener\">CAS Maven Overlay</a></li>\n</ul>\n<p>CAS使用Spring Webflow以模块化和可配置的方式驱动登录过程; login-webflow.xml文件包含流中状态和转换的简单描述。自定义此文件可能是Spring XML配置文件中除组件配置之外最常见的配置问题。有关各种CAS流程的详细说明以及常见配置点的讨论，请参见“Spring Webflow自定义指南”。</p>\n<h3 id=\"Spring-配置\"><a href=\"#Spring-配置\" class=\"headerlink\" title=\"Spring 配置\"></a>Spring 配置</h3><p>CAS服务器在很大程度上依赖于Spring框架。 spring-configuration目录下有精确和特定的XML配置文件，用于控制CAS的各种属性以及cas-servlet.xml和deployerConfigContext.xml，后者主要是CAS采用者希望将其包含在环境覆盖中 - 特定的CAS设置。</p>\n<p>如果需要通过Maven覆盖过程，可以覆盖XML配置文件中的Spring bean以更改行为。有两种方法：</p>\n<ol>\n<li><p>XML文件可以从CAS版本的源获得，并在Maven重叠版本中以相同的名称放置在相同的确切路径上。如果配置正确，则构建将使用本地提供的XML文件而不是默认值。</p>\n</li>\n<li><p>CAS服务器能够加载XML配置文件的模式以覆盖默认提供的内容。打算否决CAS默认行为的这些配置文件可以放在/ WEB-INF /中，并且必须使用以下模式命名：cas-servlet - * .xml。放在此文件中的Bean将覆盖其他文件。</p>\n</li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjvyv444x0005hwaztk9pigor","category_id":"cjvyv444v0002hwazy3daf5e0","_id":"cjvyv444z0008hwazu0tdmuuf"},{"post_id":"cjvyv444q0000hwazrq8inwjd","category_id":"cjvyv444v0002hwazy3daf5e0","_id":"cjvyv4450000bhwaznjlkbip7"},{"post_id":"cjvyv444t0001hwazy2rbaflj","category_id":"cjvyv444y0006hwazoy4on02q","_id":"cjvyv4450000chwazy18en2gr"},{"post_id":"cjvyv444w0004hwazei7id7jd","category_id":"cjvyv444y0006hwazoy4on02q","_id":"cjvyv4451000ehwazpbdxgwgl"},{"post_id":"cjvyv4457000xhwazhwxlaqte","category_id":"cjvyv444y0006hwazoy4on02q","_id":"cjvyv445a0010hwazarztjxck"},{"post_id":"cjvyv445c0016hwazmzwilpo9","category_id":"cjvyv444v0002hwazy3daf5e0","_id":"cjvyv445d0018hwazeetnt8cb"},{"post_id":"cjvywoj6n0001a2azlhvb786n","category_id":"cjvyv444y0006hwazoy4on02q","_id":"cjvywoj790004a2azxrjqnlrf"}],"PostTag":[{"post_id":"cjvyv444q0000hwazrq8inwjd","tag_id":"cjvyv444v0003hwaze7bbid4h","_id":"cjvyv4452000ghwazxqckj0rk"},{"post_id":"cjvyv444q0000hwazrq8inwjd","tag_id":"cjvyv444y0007hwaz7dqf2idt","_id":"cjvyv4452000hhwazq5rjc6t8"},{"post_id":"cjvyv444q0000hwazrq8inwjd","tag_id":"cjvyv444z000ahwazn8i3ulcj","_id":"cjvyv4452000jhwaz827d5co6"},{"post_id":"cjvyv444q0000hwazrq8inwjd","tag_id":"cjvyv4450000dhwaz4vwjy49w","_id":"cjvyv4452000khwazyziki4p5"},{"post_id":"cjvyv444t0001hwazy2rbaflj","tag_id":"cjvyv4451000fhwazjkqf88na","_id":"cjvyv4453000mhwazg4z63jsu"},{"post_id":"cjvyv444t0001hwazy2rbaflj","tag_id":"cjvyv4452000ihwaz7gkujg7i","_id":"cjvyv4453000nhwazucde45b7"},{"post_id":"cjvyv444w0004hwazei7id7jd","tag_id":"cjvyv4452000ihwaz7gkujg7i","_id":"cjvyv4454000qhwazh3ch1d8b"},{"post_id":"cjvyv444w0004hwazei7id7jd","tag_id":"cjvyv4453000ohwazplm5vy4o","_id":"cjvyv4454000rhwazck89l0wd"},{"post_id":"cjvyv444x0005hwaztk9pigor","tag_id":"cjvyv4454000phwazt2pkbky4","_id":"cjvyv4455000uhwazvpp1lion"},{"post_id":"cjvyv444x0005hwaztk9pigor","tag_id":"cjvyv4452000ihwaz7gkujg7i","_id":"cjvyv4455000vhwaz3numr3ms"},{"post_id":"cjvyv444x0005hwaztk9pigor","tag_id":"cjvyv4454000thwaz0n2epjvr","_id":"cjvyv4455000whwaz6wydxppk"},{"post_id":"cjvyv4457000xhwazhwxlaqte","tag_id":"cjvyv445a000zhwazkbg14365","_id":"cjvyv445b0013hwazzb5fn8py"},{"post_id":"cjvyv4457000xhwazhwxlaqte","tag_id":"cjvyv445a0011hwaz9okvq2e7","_id":"cjvyv445b0014hwaz3rp1cubr"},{"post_id":"cjvyv4457000xhwazhwxlaqte","tag_id":"cjvyv445a0012hwaz45579io7","_id":"cjvyv445b0015hwaz116lo60d"},{"post_id":"cjvyv445c0016hwazmzwilpo9","tag_id":"cjvyv4452000ihwaz7gkujg7i","_id":"cjvyv445d0019hwazpct4fhhm"},{"post_id":"cjvyv445c0016hwazmzwilpo9","tag_id":"cjvyv445d0017hwazvvi8l398","_id":"cjvyv445e001ahwazyz82m2b7"},{"post_id":"cjvywoj6n0001a2azlhvb786n","tag_id":"cjvyv445a000zhwazkbg14365","_id":"cjvywoj7a0005a2azxqcpm5ui"},{"post_id":"cjvywoj6n0001a2azlhvb786n","tag_id":"cjvyv445a0011hwaz9okvq2e7","_id":"cjvywoj7a0006a2azjpbnnh4u"},{"post_id":"cjvywoj6n0001a2azlhvb786n","tag_id":"cjvywoj740003a2az4djn0ot3","_id":"cjvywoj7b0007a2azd3mph54a"}],"Tag":[{"name":"博客","_id":"cjvyv444v0003hwaze7bbid4h"},{"name":"Jekyll","_id":"cjvyv444y0007hwaz7dqf2idt"},{"name":"GitHub Pages","_id":"cjvyv444z000ahwazn8i3ulcj"},{"name":"markdown","_id":"cjvyv4450000dhwaz4vwjy49w"},{"name":"node","_id":"cjvyv4451000fhwazjkqf88na"},{"name":"linux","_id":"cjvyv4452000ihwaz7gkujg7i"},{"name":"yarn","_id":"cjvyv4453000ohwazplm5vy4o"},{"name":"jenkins","_id":"cjvyv4454000phwazt2pkbky4"},{"name":"yum","_id":"cjvyv4454000thwaz0n2epjvr"},{"name":"CAS","_id":"cjvyv445a000zhwazkbg14365"},{"name":"单点登录","_id":"cjvyv445a0011hwaz9okvq2e7"},{"name":"入门","_id":"cjvyv445a0012hwaz45579io7"},{"name":"MongoDB","_id":"cjvyv445d0017hwazvvi8l398"},{"name":"安装","_id":"cjvywoj740003a2az4djn0ot3"}]}}